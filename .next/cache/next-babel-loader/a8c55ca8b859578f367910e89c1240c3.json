{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport DangerButton from './DangerButton';\nimport Grid from '@material-ui/core/Grid';\nimport { styles } from '../../stylesheet';\n/* shown when user first starts playing - they can choose what type of game they want to play\ninitializes the state\n*/\n\nvar StartComponent = /*#__PURE__*/function (_Component) {\n  _inherits(StartComponent, _Component);\n\n  function StartComponent(props) {\n    var _this;\n\n    _classCallCheck(this, StartComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StartComponent).call(this, props));\n    _this.state = {\n      randomvar: '',\n      startGame: true,\n      singlePlayer: true,\n      duration: 1\n    };\n    _this.onClickStartGame = _this.onClickStartGame.bind(_assertThisInitialized(_this));\n    _this.onClickSingle = _this.onClickSingle.bind(_assertThisInitialized(_this));\n    _this.onClickMulti = _this.onClickMulti.bind(_assertThisInitialized(_this));\n    return _this;\n  } // sets up the state to play a game for the prototype. Calls a callback function that will call the backhome function\n\n\n  _createClass(StartComponent, [{\n    key: \"onClickStartGame\",\n    value: function onClickStartGame() {\n      this.setState({\n        startGame: !this.state.startGame\n      });\n      this.props.callback(\"QUESTIONS\");\n    }\n  }, {\n    key: \"onClickSingle\",\n    value: function onClickSingle() {\n      this.setState({\n        singlePlayer: true\n      });\n    }\n  }, {\n    key: \"onClickMulti\",\n    value: function onClickMulti() {\n      this.setState({\n        singlePlayer: false\n      });\n    }\n  }, {\n    key: \"onSelectDuration\",\n    value: function onSelectDuration(dur) {\n      this.setState({\n        duration: dur\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var startButton = __jsx(Button, {\n        style: styles.unselectedButton,\n        variant: \"contained\",\n        onClick: this.onClickStartGame\n      }, \"Start Game\");\n\n      var singlePlayerSelector = this.state.singlePlayer ? __jsx(DangerButton, {\n        text: \"Single Player\"\n      }) : __jsx(Button, {\n        style: styles.unselectedButton,\n        variant: \"contained\",\n        onClick: this.onClickSingle\n      }, \"Single Player\");\n      var multiPlayerSelector = this.state.singlePlayer ? __jsx(Button, {\n        style: styles.unselectedButton,\n        variant: \"contained\",\n        onClick: this.onClickMulti\n      }, \"Multi Player\") : __jsx(DangerButton, {\n        text: \"Multi Player\"\n      });\n      var shortDurationSelector = this.state.duration === 1 ? __jsx(DangerButton, {\n        text: \"Short Game [10 min]\"\n      }) : __jsx(Button, {\n        style: styles.unselectedButton,\n        variant: \"contained\",\n        onClick: function onClick() {\n          return _this2.onSelectDuration(1);\n        }\n      }, \"Short Game [10 min]\");\n      var medDurationSelector = this.state.duration === 2 ? __jsx(DangerButton, {\n        text: \"Medium Game [20 min]\"\n      }) : __jsx(Button, {\n        style: styles.unselectedButton,\n        variant: \"contained\",\n        onClick: function onClick() {\n          return _this2.onSelectDuration(2);\n        }\n      }, \"Medium Game [20 min]\");\n      var longDurationSelector = this.state.duration === 3 ? __jsx(DangerButton, {\n        text: \"Long Game [30 min]\"\n      }) : __jsx(Button, {\n        style: styles.unselectedButton,\n        variant: \"contained\",\n        onClick: function onClick() {\n          return _this2.onSelectDuration(3);\n        }\n      }, \"Long Game [30 min]\");\n      return __jsx(\"div\", {\n        style: styles.root\n      }, __jsx(Grid, {\n        style: styles.title\n      }, \" TRIVIA \"), __jsx(Grid, {\n        style: styles.row,\n        spacing: 3\n      }, singlePlayerSelector, multiPlayerSelector), __jsx(Grid, {\n        style: styles.row,\n        spacing: 3\n      }, shortDurationSelector, medDurationSelector, longDurationSelector), __jsx(Grid, {\n        style: styles.row,\n        spacing: 3\n      }, startButton));\n    }\n  }]);\n\n  return StartComponent;\n}(Component);\n\nexport default StartComponent;","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/johnsonsong/Desktop/Daimler/CabanaTrivia/pages/components/Categories.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport DangerButton from './DangerButton';\nimport CategoriesButton from './CategoriesButton';\nimport Grid from '@material-ui/core/Grid';\nimport { styles } from '../stylesheet.js';\n/* shown when user first starts playing - they can choose what type of game they want to play\ninitializes the state\n*/\n\nvar CategoriesComponent = /*#__PURE__*/function (_Component) {\n  _inherits(CategoriesComponent, _Component);\n\n  function CategoriesComponent(props) {\n    var _this;\n\n    _classCallCheck(this, CategoriesComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CategoriesComponent).call(this, props));\n    _this.state = {\n      generalKnowledge: false,\n      film: false,\n      scienceNature: false,\n      sports: false,\n      history: false,\n      tv: false,\n      books: false,\n      music: false,\n      mythology: false,\n      geography: false,\n      art: false,\n      videoGames: false\n    };\n    _this.onClickGeneralKnowledge = _this.onClickGeneralKnowledge.bind(_assertThisInitialized(_this));\n    return _this;\n  } //Set the value of the category chosen as true\n\n\n  _createClass(CategoriesComponent, [{\n    key: \"onClickGeneralKnowledge\",\n    value: function onClickGeneralKnowledge() {\n      if (this.state.generalKnowledge) {\n        this.setState({\n          generalKnowledge: false\n        });\n      } else {\n        this.setState({\n          generalKnowledge: true\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //By default, our categoty buttons are all unselected. When selected, the button looks selected\n      //TODO: Pass a function that will change the boolen of individual category\n      //Example is given on General Knowledge\n      var generalKnowledgeButton = this.state.generalKnowledge ? __jsx(DangerButton, {\n        text: \"General Knowledge\",\n        onClick: this.onClickGeneralKnowledge,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }) : __jsx(CategoriesButton, {\n        text: \"General Knowledge\",\n        onClick: this.onClickGeneralKnowledge,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      });\n      var filmButton = this.state.film ? __jsx(DangerButton, {\n        text: \"Film\",\n        onClick: this.onClickFilm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }) : __jsx(CategoriesButton, {\n        text: \"Film\",\n        onClick: this.onClickFilm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      });\n      var scienceNatureButton = this.state.scienceNature ? __jsx(DangerButton, {\n        text: \"Science and Nature\",\n        onClick: this.onClickScienceNature,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }) : __jsx(CategoriesButton, {\n        text: \"Science and Nature\",\n        onClick: this.onClickScienceNature,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      });\n      var sportsButton = this.state.sports ? __jsx(CategoriesButton, {\n        text: \"Sports\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }) : __jsx(DangerButton, {\n        text: \"Sports\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      });\n      var historyButton = this.state.history ? __jsx(CategoriesButton, {\n        text: \"History\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }) : __jsx(DangerButton, {\n        text: \"History\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      });\n      var tvButton = this.state.tv ? __jsx(CategoriesButton, {\n        text: \"Television\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }) : __jsx(DangerButton, {\n        text: \"Television\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      });\n      var booksButton = this.state.books ? __jsx(CategoriesButton, {\n        text: \"Books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }) : __jsx(DangerButton, {\n        text: \"Books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      });\n      var musicButton = this.state.music ? __jsx(CategoriesButton, {\n        text: \"Books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }) : __jsx(DangerButton, {\n        text: \"Books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      });\n      var mythologyButton = this.state.mythology ? __jsx(CategoriesButton, {\n        text: \"Mythology\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }) : __jsx(DangerButton, {\n        text: \"Mythology\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      });\n      var geographyButton = this.state.geography ? __jsx(CategoriesButton, {\n        text: \"Geography\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }) : __jsx(DangerButton, {\n        text: \"Geography\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      });\n      var artButton = this.state.art ? __jsx(CategoriesButton, {\n        text: \"Art\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }) : __jsx(DangerButton, {\n        text: \"Art\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      });\n      var videoGamesButton = this.state.videoGames ? __jsx(CategoriesButton, {\n        text: \"Art\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }) : __jsx(DangerButton, {\n        text: \"Art\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      });\n      return (//TODO: Make sure that styles.column does actually style to 2 columns. Check the stylesheet.js file\n        __jsx(\"div\", {\n          style: styles.root,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, __jsx(Grid, {\n          style: styles.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, \" SELECT UP TO 3 CATEGORIES \"), \"//Column 1\", __jsx(Grid, {\n          style: styles.column,\n          spacing: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, generalKnowledgeButton, filmButton, scienceNatureButton, sportsButton, historyButton, tvButton), \"//Column 2\", __jsx(Grid, {\n          style: styles.column,\n          spacing: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, booksButton, musicButton, mythologyButton, geographyButton, artButton, videoGamesButton), \"//TODO: //Add some arrow button that would mean \\\"Next\\\". //Not yet implemented\")\n      );\n    }\n  }]);\n\n  return CategoriesComponent;\n}(Component);\n\nexport default CategoriesComponent;","map":{"version":3,"sources":["/Users/johnsonsong/Desktop/Daimler/CabanaTrivia/pages/components/Categories.js"],"names":["React","Component","Button","DangerButton","CategoriesButton","Grid","styles","CategoriesComponent","props","state","generalKnowledge","film","scienceNature","sports","history","tv","books","music","mythology","geography","art","videoGames","onClickGeneralKnowledge","bind","setState","generalKnowledgeButton","filmButton","onClickFilm","scienceNatureButton","onClickScienceNature","sportsButton","historyButton","tvButton","booksButton","musicButton","mythologyButton","geographyButton","artButton","videoGamesButton","root","title","column"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button'\nimport DangerButton from './DangerButton'\nimport CategoriesButton from './CategoriesButton'\nimport Grid from '@material-ui/core/Grid'\nimport { styles } from '../stylesheet.js'\n\n/* shown when user first starts playing - they can choose what type of game they want to play\ninitializes the state\n*/\nclass CategoriesComponent extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      generalKnowledge: false,\n      film: false,\n      scienceNature: false,\n      sports: false,\n      history: false,\n      tv: false,\n      books: false,\n      music: false,\n      mythology: false,\n      geography: false,\n      art: false,\n      videoGames: false,\n\n    };\n    this.onClickGeneralKnowledge = this.onClickGeneralKnowledge.bind(this)\n  }\n\n  //Set the value of the category chosen as true\n  onClickGeneralKnowledge() {\n    if (this.state.generalKnowledge) {\n      this.setState({generalKnowledge: false});\n    } else {\n      this.setState({generalKnowledge: true });\n    }\n  }\n\n  render() {\n    //By default, our categoty buttons are all unselected. When selected, the button looks selected\n    //TODO: Pass a function that will change the boolen of individual category\n    //Example is given on General Knowledge\n    const generalKnowledgeButton = this.state.generalKnowledge ?\n      <DangerButton text=\"General Knowledge\" onClick={this.onClickGeneralKnowledge}/>\n      :\n      <CategoriesButton text=\"General Knowledge\" onClick={this.onClickGeneralKnowledge} />\n\n    const filmButton = this.state.film ?\n      <DangerButton text=\"Film\" onClick={this.onClickFilm}/>\n      :\n      <CategoriesButton text=\"Film\" onClick={this.onClickFilm} />\n\n    const scienceNatureButton = this.state.scienceNature ?\n      <DangerButton text=\"Science and Nature\" onClick={this.onClickScienceNature}/>\n      :\n      <CategoriesButton text=\"Science and Nature\" onClick={this.onClickScienceNature} />\n\n    const sportsButton = this.state.sports ?\n      <CategoriesButton text=\"Sports\"/> : <DangerButton text=\"Sports\"/>\n\n    const historyButton = this.state.history ?\n      <CategoriesButton text=\"History\"/> : <DangerButton text=\"History\"/>\n\n    const tvButton = this.state.tv ?\n      <CategoriesButton text=\"Television\"/> : <DangerButton text=\"Television\"/>\n\n    const booksButton = this.state.books ?\n      <CategoriesButton text=\"Books\"/> : <DangerButton text=\"Books\"/>\n\n    const musicButton = this.state.music ?\n      <CategoriesButton text=\"Books\"/> : <DangerButton text=\"Books\"/>\n\n    const mythologyButton = this.state.mythology ?\n      <CategoriesButton text=\"Mythology\"/> : <DangerButton text=\"Mythology\"/>\n\n    const geographyButton = this.state.geography ?\n      <CategoriesButton text=\"Geography\"/> : <DangerButton text=\"Geography\"/>\n\n    const artButton = this.state.art ?\n      <CategoriesButton text=\"Art\"/> : <DangerButton text=\"Art\"/>\n\n    const videoGamesButton = this.state.videoGames ?\n      <CategoriesButton text=\"Art\"/> : <DangerButton text=\"Art\"/>\n\n\n    return (\n\n      //TODO: Make sure that styles.column does actually style to 2 columns. Check the stylesheet.js file\n      <div style={styles.root}>\n        <Grid style={styles.title}> SELECT UP TO 3 CATEGORIES </Grid>\n\n\n        //Column 1\n        <Grid style={styles.column} spacing={3}>\n          {generalKnowledgeButton}\n          {filmButton}\n          {scienceNatureButton}\n          {sportsButton}\n          {historyButton}\n          {tvButton}\n        </Grid>\n\n        //Column 2\n        <Grid style={styles.column} spacing={3}>\n          {booksButton}\n          {musicButton}\n          {mythologyButton}\n          {geographyButton}\n          {artButton}\n          {videoGamesButton}\n        </Grid>\n\n        //TODO:\n        //Add some arrow button that would mean \"Next\".\n        //Not yet implemented\n\n      </div>\n    );\n  }\n\n}\nexport default CategoriesComponent;\n"]},"metadata":{},"sourceType":"module"}
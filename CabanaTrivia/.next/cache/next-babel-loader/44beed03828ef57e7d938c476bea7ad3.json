{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ken/Documents/Daimler/CabanaTrivia/pages/components/Questions.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nvar QuestionsComponent = /*#__PURE__*/function (_Component) {\n  _inherits(QuestionsComponent, _Component);\n\n  function QuestionsComponent(props) {\n    var _this;\n\n    _classCallCheck(this, QuestionsComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(QuestionsComponent).call(this, props));\n    _this.state = {\n      questionsArr: []\n    };\n    _this.onGetQuestions = _this.onGetQuestions.bind(_assertThisInitialized(_this));\n    _this.onClickAnswer = _this.onClickAnswer.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(QuestionsComponent, [{\n    key: \"onGetQuestions\",\n    value: function onGetQuestions(category) {\n      var finalCateg, response, allData;\n      return _regeneratorRuntime.async(function onGetQuestions$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              finalCateg = category == null ? category : \"entertainment-music\"; //fetch questions\n              //https://cocktail-trivia-api.herokuapp.com/api/category/entertainment-music\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch(\"https://cocktail-trivia-api.herokuapp.com/api/category/\" + finalCateg));\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 6:\n              allData = _context.sent;\n              this.setState({\n                questionsArr: allData\n              });\n              this.setState({\n                currentQ: allData[0].text\n              });\n              this.setState({\n                currentAnswers: allData[0].answers\n              });\n              console.log(\"Got the data:\");\n              console.log(allData);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"onClickAnswer\",\n    value: function onClickAnswer() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _regeneratorRuntime.async(function render$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(this.onGetQuestions());\n\n            case 2:\n              return _context2.abrupt(\"return\");\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this);\n    }\n  }]);\n\n  return QuestionsComponent;\n}(Component);\n\nexport default QuestionsComponent;","map":{"version":3,"sources":["/Users/ken/Documents/Daimler/CabanaTrivia/pages/components/Questions.js"],"names":["React","Component","Button","Grid","QuestionsComponent","props","state","questionsArr","onGetQuestions","bind","onClickAnswer","category","finalCateg","fetch","response","json","allData","setState","currentQ","text","currentAnswers","answers","console","log"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;IAEMC,kB;;;AAEJ,8BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,4FAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KAAb;AAEA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,+BAAtB;AACA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBD,IAAnB,+BAArB;AALiB;AAMlB;;;;mCAGoBE,Q;;;;;;AACbC,cAAAA,U,GAAaD,QAAQ,IAAI,IAAZ,GAAkBA,QAAlB,GAA4B,qB,EAG/C;AACA;;;+CACuBE,KAAK,CAAC,4DAA0DD,UAA3D,C;;;AAAtBE,cAAAA,Q;;+CACgBA,QAAQ,CAACC,IAAT,E;;;AAAhBC,cAAAA,O;AACN,mBAAKC,QAAL,CAAc;AAACV,gBAAAA,YAAY,EAAES;AAAf,eAAd;AACA,mBAAKC,QAAL,CAAc;AAACC,gBAAAA,QAAQ,EAAEF,OAAO,CAAC,CAAD,CAAP,CAAWG;AAAtB,eAAd;AACA,mBAAKF,QAAL,CAAc;AAACG,gBAAAA,cAAc,EAAEJ,OAAO,CAAC,CAAD,CAAP,CAAWK;AAA5B,eAAd;AAIAC,cAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,cAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;;;;;;;;;;;oCAQa,CAEd;;;;;;;;;+CAGO,KAAKR,cAAL,E;;;;;;;;;;;;;;;EAvCuBP,S;;AAmDjC,eAAeG,kBAAf","sourcesContent":["import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid';\n\nclass QuestionsComponent extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { questionsArr: [] };\n\n    this.onGetQuestions = this.onGetQuestions.bind(this);\n    this.onClickAnswer = this.onClickAnswer.bind(this);\n  }\n\n\n  async onGetQuestions(category){\n    const finalCateg = category == null? category: \"entertainment-music\";\n\n\n    //fetch questions\n    //https://cocktail-trivia-api.herokuapp.com/api/category/entertainment-music\n    const response = await fetch(\"https://cocktail-trivia-api.herokuapp.com/api/category/\"+finalCateg)\n    const allData = await response.json()\n    this.setState({questionsArr: allData})\n    this.setState({currentQ: allData[0].text})\n    this.setState({currentAnswers: allData[0].answers})\n\n\n\n    console.log(\"Got the data:\")\n    console.log(allData)\n\n\n    \n    \n    \n  }\n\n  onClickAnswer(){\n\n  }\n\n  async render() {\n    await this.onGetQuestions()\n    \n\n    \n    return\n    <div>\n      <p>First Question</p>\n        <AnswersComponent answers={this.state.currentAnswers}></AnswersComponent>\n    </div>\n  \n  }\n}\nexport default QuestionsComponent;\n"]},"metadata":{},"sourceType":"module"}
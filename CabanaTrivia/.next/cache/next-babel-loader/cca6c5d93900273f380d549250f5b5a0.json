{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jack/Google Drive/Winter Quarter 2020/CS 210/Daimler/CabanaTrivia/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport DangerButton from './components/DangerButton';\nimport Grid from '@material-ui/core/Grid';\nvar styles = {\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column'\n  }\n};\n\nvar IndexPage = /*#__PURE__*/function (_Component) {\n  _inherits(IndexPage, _Component);\n\n  function IndexPage(props) {\n    var _this;\n\n    _classCallCheck(this, IndexPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(IndexPage).call(this, props));\n    _this.state = {\n      startGame: true,\n      singlePlayer: true,\n      duration: 1\n    };\n    _this.onClickStartGame = _this.onClickStartGame.bind(_assertThisInitialized(_this));\n    _this.onClickSingle = _this.onClickSingle.bind(_assertThisInitialized(_this));\n    _this.onClickMulti = _this.onClickMulti.bind(_assertThisInitialized(_this));\n    _this.onSelectDuration = _this.onSelectDuration.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(IndexPage, [{\n    key: \"onClickStartGame\",\n    value: function onClickStartGame() {\n      //change the state when the user clicks start game\n      if (this.state.startGame === true) {\n        this.setState({\n          startGame: false\n        });\n      } else {\n        this.setState({\n          startGame: true\n        });\n      }\n    }\n  }, {\n    key: \"onClickSingle\",\n    value: function onClickSingle() {\n      this.setState({\n        singlePlayer: true\n      });\n    }\n  }, {\n    key: \"onClickMulti\",\n    value: function onClickMulti() {\n      this.setState({\n        singlePlayer: false\n      });\n    }\n  }, {\n    key: \"onSelectDuration\",\n    value: function onSelectDuration(dur) {\n      this.setState({\n        duration: dur\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var startButton = this.state.startGame ? __jsx(Button, {\n        variant: \"contained\",\n        onClick: this.onClickStartGame,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Start Game\") : __jsx(DangerButton, {\n        text: \"End Game\",\n        onClick: this.onClickStartGame,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      });\n      var singlePlayerSelector = this.state.singlePlayer ? __jsx(DangerButton, {\n        text: \"Single Player\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }) : __jsx(Button, {\n        variant: \"contained\",\n        onClick: this.onClickSingle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Single Player\");\n      var multiPlayerSelector = this.state.singlePlayer ? __jsx(Button, {\n        variant: \"contained\",\n        onClick: this.onClickMulti,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Multi Player\") : __jsx(DangerButton, {\n        text: \"Multi Player\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      });\n      var shortDurationSelector = this.state.duration === 1 ? __jsx(DangerButton, {\n        text: \"Short Game [10 min]\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }) : __jsx(Button, {\n        variant: \"contained\",\n        onClick: function onClick() {\n          return _this2.onSelectDuration(1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Short Game [10 min]\");\n      var medDurationSelector = this.state.duration === 2 ? __jsx(DangerButton, {\n        text: \"Medium Game [20 min]\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }) : __jsx(Button, {\n        variant: \"contained\",\n        onClick: function onClick() {\n          return _this2.onSelectDuration(2);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Medium Game [20 min]\");\n      var longDurationSelector = this.state.duration === 3 ? __jsx(DangerButton, {\n        text: \"Long Game [30 min]\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }) : __jsx(Button, {\n        variant: \"contained\",\n        onClick: function onClick() {\n          return _this2.onSelectDuration(3);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Long Game [30 min]\");\n      return __jsx(\"div\", {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, __jsx(Grid, {\n        container: true,\n        spacing: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, singlePlayerSelector), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, multiPlayerSelector)), __jsx(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, shortDurationSelector, medDurationSelector, longDurationSelector), startButton);\n    }\n  }]);\n\n  return IndexPage;\n}(Component);\n\nexport { IndexPage as default };","map":{"version":3,"sources":["/Users/jack/Google Drive/Winter Quarter 2020/CS 210/Daimler/CabanaTrivia/pages/index.js"],"names":["React","Component","Button","DangerButton","Grid","styles","container","display","justifyContent","alignItems","flexDirection","IndexPage","props","state","startGame","singlePlayer","duration","onClickStartGame","bind","onClickSingle","onClickMulti","onSelectDuration","setState","dur","startButton","singlePlayerSelector","multiPlayerSelector","shortDurationSelector","medDurationSelector","longDurationSelector"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button'\nimport DangerButton from './components/DangerButton'\nimport Grid from '@material-ui/core/Grid';\n\n\nconst styles = ({\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column'\n  }\n})\n\nexport default class IndexPage extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      startGame: true,\n      singlePlayer: true,\n      duration: 1\n    };\n\n    this.onClickStartGame = this.onClickStartGame.bind(this)\n    this.onClickSingle = this.onClickSingle.bind(this)\n    this.onClickMulti = this.onClickMulti.bind(this)\n    this.onSelectDuration = this.onSelectDuration.bind(this)\n  }\n\n  onClickStartGame() {\n    //change the state when the user clicks start game\n    if(this.state.startGame === true){\n      this.setState({startGame: false})\n    }else{\n      this.setState({startGame: true})\n    }\n  }\n\n  onClickSingle() {\n    this.setState({singlePlayer: true})\n  }\n\n  onClickMulti() {\n    this.setState({singlePlayer: false})\n  }\n\n  onSelectDuration(dur) {\n    this.setState({duration: dur})\n  }\n\n  render() {\n\n    const startButton = this.state.startGame ?\n      <Button variant=\"contained\" onClick={this.onClickStartGame} >\n        Start Game\n      </Button> :\n      <DangerButton text=\"End Game\" onClick={this.onClickStartGame}>\n      </DangerButton>\n\n    const singlePlayerSelector = this.state.singlePlayer ?\n      <DangerButton text=\"Single Player\">\n      </DangerButton> :\n      <Button variant=\"contained\" onClick={this.onClickSingle} >\n        Single Player\n      </Button>\n\n    const multiPlayerSelector = this.state.singlePlayer ?\n      <Button variant=\"contained\" onClick={this.onClickMulti} >\n        Multi Player\n      </Button> :\n      <DangerButton text=\"Multi Player\">\n      </DangerButton>\n\n    const shortDurationSelector = this.state.duration === 1 ?\n      <DangerButton text=\"Short Game [10 min]\">\n      </DangerButton> :\n      <Button variant=\"contained\" onClick={() => this.onSelectDuration(1)} >\n        Short Game [10 min]\n      </Button>\n\n    const medDurationSelector = this.state.duration === 2 ?\n      <DangerButton text=\"Medium Game [20 min]\">\n      </DangerButton> :\n      <Button variant=\"contained\" onClick={() => this.onSelectDuration(2)} >\n        Medium Game [20 min]\n      </Button>\n\n    const longDurationSelector = this.state.duration === 3 ?\n      <DangerButton text=\"Long Game [30 min]\">\n      </DangerButton> :\n      <Button variant=\"contained\" onClick={() => this.onSelectDuration(3)} >\n        Long Game [30 min]\n      </Button>\n\n\n\n    return (\n      <div style={styles.container}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={6}>\n            {singlePlayerSelector}\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            {multiPlayerSelector}\n          </Grid>\n        </Grid>\n        <Grid container>\n          {shortDurationSelector}\n          {medDurationSelector}\n          {longDurationSelector}\n        </Grid>\n        {startButton}\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
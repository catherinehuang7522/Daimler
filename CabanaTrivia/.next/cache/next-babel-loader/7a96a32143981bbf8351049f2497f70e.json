{"ast":null,"code":"var _jsxFileName = \"/Users/ken/Documents/Daimler/CabanaTrivia/pages/components/Feedback.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nconst Entities = require('html-entities').AllHtmlEntities;\n\nimport { styles } from '../../stylesheet';\nconst entities = new Entities();\n\nclass FeedbackComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.onPressDismiss = this.onPressDismiss.bind(this);\n  }\n\n  onPressDismiss() {\n    this.props.callback();\n  }\n\n  render() {\n    let headerText;\n    let bodyText;\n\n    if (this.props.wasCorrect) {\n      headerText = \"Correct!\";\n      bodyText = \"Way to go! You were right! \" + this.props.correctAnswer + \" is correct.\";\n    } else {\n      headerText = \"Incorrect\";\n      bodyText = \"Oh no, that wasn't right. The correct answer was \" + this.props.correctAnswer + \".\";\n    }\n\n    return __jsx(Grid, {\n      columnGrid: true,\n      direction: \"column\",\n      justify: \"center\",\n      alignItems: \"center\",\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, __jsx(Grid, {\n      rowGrid: true,\n      spacing: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      style: styles.feedbackHeaderText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, headerText)), __jsx(\"p\", {\n      style: styles.feedbackBodyText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, bodyText));\n  }\n\n}\n\nexport default FeedbackComponent;","map":{"version":3,"sources":["/Users/ken/Documents/Daimler/CabanaTrivia/pages/components/Feedback.js"],"names":["React","Component","Button","makeStyles","Grid","Entities","require","AllHtmlEntities","styles","entities","FeedbackComponent","constructor","props","onPressDismiss","bind","callback","render","headerText","bodyText","wasCorrect","correctAnswer","feedbackHeaderText","feedbackBodyText"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,eAAD,CAAP,CAAyBC,eAA1C;;AACA,SAASC,MAAT,QAAuB,kBAAvB;AAEA,MAAMC,QAAQ,GAAG,IAAIJ,QAAJ,EAAjB;;AAGA,MAAMK,iBAAN,SAAgCT,SAAhC,CAA0C;AAExCU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAEDD,EAAAA,cAAc,GAAG;AACf,SAAKD,KAAL,CAAWG,QAAX;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAIC,UAAJ;AACA,QAAIC,QAAJ;;AACA,QAAI,KAAKN,KAAL,CAAWO,UAAf,EAA2B;AACzBF,MAAAA,UAAU,GAAG,UAAb;AACAC,MAAAA,QAAQ,GAAG,gCAAgC,KAAKN,KAAL,CAAWQ,aAA3C,GAA2D,cAAtE;AACD,KAHD,MAGO;AACLH,MAAAA,UAAU,GAAG,WAAb;AACAC,MAAAA,QAAQ,GAAG,sDAAsD,KAAKN,KAAL,CAAWQ,aAAjE,GAAiF,GAA5F;AACD;;AAED,WAAO,MAAC,IAAD;AAAM,MAAA,UAAU,MAAhB;AACP,MAAA,SAAS,EAAC,QADH;AAEP,MAAA,OAAO,EAAC,QAFD;AAGP,MAAA,UAAU,EAAC,QAHJ;AAIP,MAAA,OAAO,EAAE,CAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAML,MAAC,IAAD;AAAM,MAAA,OAAO,MAAb;AAAc,MAAA,OAAO,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,KAAK,EAAEZ,MAAM,CAACa,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsCJ,UAAtC,CADF,CANK,EAUL;AAAG,MAAA,KAAK,EAAET,MAAM,CAACc,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoCJ,QAApC,CAVK,CAAP;AAgBD;;AAtCuC;;AAwC1C,eAAeR,iBAAf","sourcesContent":["import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid'\nconst Entities = require('html-entities').AllHtmlEntities\nimport { styles } from '../../stylesheet'\n\nconst entities = new Entities();\n\n\nclass FeedbackComponent extends Component {\n\n  constructor(props) {\n    super(props)\n    this.onPressDismiss = this.onPressDismiss.bind(this)\n  }\n\n  onPressDismiss() {\n    this.props.callback()\n  }\n\n  render() {\n    let headerText;\n    let bodyText;\n    if (this.props.wasCorrect) {\n      headerText = \"Correct!\";\n      bodyText = \"Way to go! You were right! \" + this.props.correctAnswer + \" is correct.\"\n    } else {\n      headerText = \"Incorrect\";\n      bodyText = \"Oh no, that wasn't right. The correct answer was \" + this.props.correctAnswer + \".\"\n    }\n\n    return <Grid columnGrid\n    direction=\"column\"\n    justify=\"center\"\n    alignItems=\"center\"\n    spacing={2}>\n\n      <Grid rowGrid spacing={1}>\n        <p style={styles.feedbackHeaderText}>{headerText}</p>\n      </Grid>\n\n      <p style={styles.feedbackBodyText}>{bodyText}</p>\n\n\n    </Grid>\n\n\n  }\n}\nexport default FeedbackComponent;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ken/Documents/Daimler/CabanaTrivia/pages/components/Questions.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport DangerButton from './DangerButton';\nimport Grid from '@material-ui/core/Grid';\nvar styles = {\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column'\n  },\n  root: {\n    flexGrow: 1\n  }\n};\n\nvar QuestionsComponent = /*#__PURE__*/function (_Component) {\n  _inherits(QuestionsComponent, _Component);\n\n  function QuestionsComponent(props) {\n    var _this;\n\n    _classCallCheck(this, QuestionsComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(QuestionsComponent).call(this, props));\n    _this.state = {\n      startGame: true,\n      singlePlayer: true,\n      duration: 1\n    };\n    return _this;\n  }\n\n  _createClass(QuestionsComponent, [{\n    key: \"onGetQuestions\",\n    value: function onGetQuestions(category) {\n      var finalCateg, response, allData;\n      return _regeneratorRuntime.async(function onGetQuestions$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              finalCateg = category == null ? category : \"entertainment-music\";\n              console.log(\"Starting out\"); //fetch questions\n              //https://cocktail-trivia-api.herokuapp.com/api/category/entertainment-music\n\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(fetch(\"https://cocktail-trivia-api.herokuapp.com/api/category/\" + finalCateg));\n\n            case 4:\n              response = _context.sent;\n              console.log(\"response is: \");\n              console.log(response);\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 9:\n              allData = _context.sent;\n              console.log(\"All Data: \");\n              console.log();\n              this.setState({\n                questionsArr: allData\n              });\n              this.setState({\n                currentQ: allData[0].text\n              });\n              this.setState({\n                currentAnswers: allData[0].answers\n              });\n              console.log(\"Got the data:\");\n              console.log(allData);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.onGetQuestions();\n      return __jsx(\"div\", {\n        style: styles.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return QuestionsComponent;\n}(Component);\n\nexport default QuestionsComponent; // import React, { Component } from 'react';\n// import Button from '@material-ui/core/Button'\n// import Grid from '@material-ui/core/Grid';\n// class QuestionsComponent extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { questionsArr: [] };\n//     this.onGetQuestions = this.onGetQuestions.bind(this);\n//     this.onClickAnswer = this.onClickAnswer.bind(this);\n//   }\n//   async onGetQuestions(category) {\n//     const finalCateg = category == null ? category : \"entertainment-music\";\n//     console.log(\"Starting out\");\n//     //fetch questions\n//     //https://cocktail-trivia-api.herokuapp.com/api/category/entertainment-music\n//     // const response = await fetch(\"https://cocktail-trivia-api.herokuapp.com/api/category/\" + finalCateg)\n//     // const allData = await response.json()\n//     const allData = []\n//     this.setState({ questionsArr: allData })\n//     this.setState({ currentQ: allData[0].text })\n//     this.setState({ currentAnswers: allData[0].answers })\n//     console.log(\"Got the data:\")\n//     console.log(allData)\n//   }\n//   onClickAnswer() {\n//   }\n//   async render() {\n//    // await this.onGetQuestions()\n//     // <AnswersComponent answers={this.state.currentAnswers}></AnswersComponent>\n//     return  <p>First Question</p>\n//   }\n// }\n// export default QuestionsComponent;","map":{"version":3,"sources":["/Users/ken/Documents/Daimler/CabanaTrivia/pages/components/Questions.js"],"names":["React","Component","Button","DangerButton","Grid","styles","container","display","justifyContent","alignItems","flexDirection","root","flexGrow","QuestionsComponent","props","state","startGame","singlePlayer","duration","category","finalCateg","console","log","fetch","response","json","allData","setState","questionsArr","currentQ","text","currentAnswers","answers","onGetQuestions"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAGA,IAAMC,MAAM,GAAI;AACdC,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,aAAa,EAAE;AAJN,GADG;AAOdC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN;AAPQ,CAAhB;;IAYMC,kB;;;AAEJ,8BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,4FAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,IADA;AAEXC,MAAAA,YAAY,EAAE,IAFH;AAGXC,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAHiB;AAUlB;;;;mCAEoBC,Q;;;;;;AACbC,cAAAA,U,GAAaD,QAAQ,IAAI,IAAZ,GAAmBA,QAAnB,GAA8B,qB;AAEjDE,cAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,E,CACA;AACA;;;+CACuBC,KAAK,CAAC,4DAA4DH,UAA7D,C;;;AAAtBI,cAAAA,Q;AACNH,cAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,cAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;;+CAGsBA,QAAQ,CAACC,IAAT,E;;;AAAhBC,cAAAA,O;AACNL,cAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,cAAAA,OAAO,CAACC,GAAR;AAGA,mBAAKK,QAAL,CAAc;AAAEC,gBAAAA,YAAY,EAAEF;AAAhB,eAAd;AACA,mBAAKC,QAAL,CAAc;AAAEE,gBAAAA,QAAQ,EAAEH,OAAO,CAAC,CAAD,CAAP,CAAWI;AAAvB,eAAd;AACA,mBAAKH,QAAL,CAAc;AAAEI,gBAAAA,cAAc,EAAEL,OAAO,CAAC,CAAD,CAAP,CAAWM;AAA7B,eAAd;AACAX,cAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,cAAAA,OAAO,CAACC,GAAR,CAAYI,OAAZ;;;;;;;;;;;6BAOO;AACP,WAAKO,cAAL;AACA,aAAO;AAAK,QAAA,KAAK,EAAE5B,MAAM,CAACM,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAGD;;;;EA9C8BV,S;;AAiDjC,eAAeY,kBAAf,C,CAIA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAMA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button'\nimport DangerButton from './DangerButton'\nimport Grid from '@material-ui/core/Grid'\n\n\nconst styles = ({\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column'\n  },\n  root: {\n    flexGrow: 1\n  }\n})\n\nclass QuestionsComponent extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      startGame: true,\n      singlePlayer: true,\n      duration: 1\n    };\n\n\n  }\n\n  async onGetQuestions(category) {\n    const finalCateg = category == null ? category : \"entertainment-music\";\n\n    console.log(\"Starting out\");\n    //fetch questions\n    //https://cocktail-trivia-api.herokuapp.com/api/category/entertainment-music\n    const response = await fetch(\"https://cocktail-trivia-api.herokuapp.com/api/category/\" + finalCateg)\n    console.log(\"response is: \");\n    console.log(response);\n  \n    \n    const allData = await response.json()\n    console.log(\"All Data: \");\n    console.log();\n    \n    \n    this.setState({ questionsArr: allData })\n    this.setState({ currentQ: allData[0].text })\n    this.setState({ currentAnswers: allData[0].answers })\n    console.log(\"Got the data:\")\n    console.log(allData)\n  }\n\n\n\n\n\n  render() {\n    this.onGetQuestions()\n    return <div style={styles.root}>\n\n    </div>\n  }\n\n}\nexport default QuestionsComponent;\n\n\n\n// import React, { Component } from 'react';\n// import Button from '@material-ui/core/Button'\n// import Grid from '@material-ui/core/Grid';\n\n// class QuestionsComponent extends Component {\n\n//   constructor(props) {\n//     super(props);\n//     this.state = { questionsArr: [] };\n\n//     this.onGetQuestions = this.onGetQuestions.bind(this);\n//     this.onClickAnswer = this.onClickAnswer.bind(this);\n//   }\n\n\n//   async onGetQuestions(category) {\n//     const finalCateg = category == null ? category : \"entertainment-music\";\n\n//     console.log(\"Starting out\");\n\n\n//     //fetch questions\n//     //https://cocktail-trivia-api.herokuapp.com/api/category/entertainment-music\n//     // const response = await fetch(\"https://cocktail-trivia-api.herokuapp.com/api/category/\" + finalCateg)\n//     // const allData = await response.json()\n//     const allData = []\n//     this.setState({ questionsArr: allData })\n//     this.setState({ currentQ: allData[0].text })\n//     this.setState({ currentAnswers: allData[0].answers })\n\n\n\n//     console.log(\"Got the data:\")\n//     console.log(allData)\n\n\n\n\n\n//   }\n\n//   onClickAnswer() {\n\n//   }\n\n//   async render() {\n//    // await this.onGetQuestions()\n\n//     // <AnswersComponent answers={this.state.currentAnswers}></AnswersComponent>\n//     return  <p>First Question</p>\n//   }\n// }\n// export default QuestionsComponent;\n"]},"metadata":{},"sourceType":"module"}
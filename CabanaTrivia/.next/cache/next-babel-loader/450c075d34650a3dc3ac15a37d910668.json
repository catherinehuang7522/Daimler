{"ast":null,"code":"var _jsxFileName = \"/Users/ken/Documents/Daimler/CabanaTrivia/pages/components/Answers.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nconst Entities = require('html-entities').AllHtmlEntities;\n\nconst entities = new Entities();\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'grid',\n    direction: 'column'\n  },\n  minicontainer: {\n    display: 'grid',\n    direction: 'row'\n  }\n}));\n\nclass AnswersComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.onPressAnswer = this.onPressAnswer.bind(this);\n  }\n\n  onPressAnswer(answerObj) {\n    let correctAnswer;\n\n    for (let i in this.props.answers) {\n      let currAnswerObj = this.props.answers[i];\n\n      if (currAnswerObj.correct) {\n        correctAnswer = entities.decode(currAnswerObj.text);\n        break;\n      }\n    }\n\n    this.props.callback(answerObj.correct, correctAnswer);\n  }\n\n  render() {\n    const answer1 = this.props.answers == null ? \"Answer 1\" : this.props.answers[0];\n    const answer2 = this.props.answers == null ? \"Answer 2\" : this.props.answers[1];\n    const answer3 = this.props.answers == null ? \"Answer 3\" : this.props.answers[2];\n    const answer4 = this.props.answers == null ? \"Answer 4\" : this.props.answers[3];\n    return __jsx(Grid, {\n      container: true,\n      direction: \"column\",\n      justify: \"center\",\n      alignItems: \"center\",\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, __jsx(Grid, {\n      minicontainer: true,\n      spacing: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, __jsx(Button, {\n      onClick: () => this.onPressAnswer(answer1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, entities.decode(answer1.text), \" \"), __jsx(Button, {\n      onClick: () => this.onPressAnswer(answer2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, entities.decode(answer2.text))), __jsx(Grid, {\n      minicontainer: true,\n      spacing: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, __jsx(Button, {\n      onClick: () => this.onPressAnswer(answer3),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, entities.decode(answer3.text), \" \"), __jsx(Button, {\n      onClick: () => this.onPressAnswer(answer4),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, entities.decode(answer4.text))));\n  }\n\n}\n\nexport default AnswersComponent;","map":{"version":3,"sources":["/Users/ken/Documents/Daimler/CabanaTrivia/pages/components/Answers.js"],"names":["React","Component","Button","makeStyles","Grid","Entities","require","AllHtmlEntities","entities","useStyles","theme","container","display","direction","minicontainer","AnswersComponent","constructor","props","onPressAnswer","bind","answerObj","correctAnswer","i","answers","currAnswerObj","correct","decode","text","callback","render","answer1","answer2","answer3","answer4"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,eAAD,CAAP,CAAyBC,eAA1C;;AAEA,MAAMC,QAAQ,GAAG,IAAIH,QAAJ,EAAjB;AAGA,MAAMI,SAAS,GAAGN,UAAU,CAACO,KAAK,KAAK;AACrCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,SAAS,EAAE;AAFF,GAD0B;AAKrCC,EAAAA,aAAa,EAAE;AACbF,IAAAA,OAAO,EAAE,MADI;AAEbC,IAAAA,SAAS,EAAE;AAFE;AALsB,CAAL,CAAN,CAA5B;;AAaA,MAAME,gBAAN,SAA+Bd,SAA/B,CAAyC;AAEvCe,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AAED;;AAEDD,EAAAA,aAAa,CAACE,SAAD,EAAW;AACtB,QAAIC,aAAJ;;AACA,SAAK,IAAIC,CAAT,IAAc,KAAKL,KAAL,CAAWM,OAAzB,EAAkC;AAChC,UAAIC,aAAa,GAAG,KAAKP,KAAL,CAAWM,OAAX,CAAmBD,CAAnB,CAApB;;AACA,UAAIE,aAAa,CAACC,OAAlB,EAA2B;AACzBJ,QAAAA,aAAa,GAAGb,QAAQ,CAACkB,MAAT,CAAgBF,aAAa,CAACG,IAA9B,CAAhB;AACA;AACD;AACF;;AAED,SAAKV,KAAL,CAAWW,QAAX,CAAoBR,SAAS,CAACK,OAA9B,EAAuCJ,aAAvC;AAED;;AAEDQ,EAAAA,MAAM,GAAG;AAEP,UAAMC,OAAO,GAAK,KAAKb,KAAL,CAAWM,OAAX,IAAsB,IAAtB,GAA4B,UAA5B,GAAyC,KAAKN,KAAL,CAAWM,OAAX,CAAmB,CAAnB,CAA3D;AACA,UAAMQ,OAAO,GAAK,KAAKd,KAAL,CAAWM,OAAX,IAAsB,IAAtB,GAA4B,UAA5B,GAAwC,KAAKN,KAAL,CAAWM,OAAX,CAAmB,CAAnB,CAA1D;AACA,UAAMS,OAAO,GAAK,KAAKf,KAAL,CAAWM,OAAX,IAAsB,IAAtB,GAA4B,UAA5B,GAAwC,KAAKN,KAAL,CAAWM,OAAX,CAAmB,CAAnB,CAA1D;AACA,UAAMU,OAAO,GAAK,KAAKhB,KAAL,CAAWM,OAAX,IAAsB,IAAtB,GAA4B,UAA5B,GAAwC,KAAKN,KAAL,CAAWM,OAAX,CAAmB,CAAnB,CAA1D;AAGA,WAAO,MAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AACP,MAAA,SAAS,EAAC,QADH;AAEP,MAAA,OAAO,EAAC,QAFD;AAGP,MAAA,UAAU,EAAC,QAHJ;AAIP,MAAA,OAAO,EAAE,CAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAML,MAAC,IAAD;AAAM,MAAA,aAAa,MAAnB;AAAoB,MAAA,OAAO,EAAE,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AAAS,MAAA,OAAO,EAAE,MAAK,KAAKL,aAAL,CAAmBY,OAAnB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqDtB,QAAQ,CAACkB,MAAT,CAAgBI,OAAO,CAACH,IAAxB,CAArD,MADF,EAEE,MAAC,MAAD;AAAS,MAAA,OAAO,EAAE,MAAK,KAAKT,aAAL,CAAmBa,OAAnB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqDvB,QAAQ,CAACkB,MAAT,CAAgBK,OAAO,CAACJ,IAAxB,CAArD,CAFF,CANK,EAWL,MAAC,IAAD;AAAM,MAAA,aAAa,MAAnB;AAAoB,MAAA,OAAO,EAAE,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AAAS,MAAA,OAAO,EAAE,MAAK,KAAKT,aAAL,CAAmBc,OAAnB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqDxB,QAAQ,CAACkB,MAAT,CAAgBM,OAAO,CAACL,IAAxB,CAArD,MADF,EAEE,MAAC,MAAD;AAAS,MAAA,OAAO,EAAE,MAAK,KAAKT,aAAL,CAAmBe,OAAnB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqDzB,QAAQ,CAACkB,MAAT,CAAgBO,OAAO,CAACN,IAAxB,CAArD,CAFF,CAXK,CAAP;AAoBD;;AAlDsC;;AAoDzC,eAAeZ,gBAAf","sourcesContent":["import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid'\nconst Entities = require('html-entities').AllHtmlEntities\n\nconst entities = new Entities();\n\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'grid',\n    direction: 'column'\n  },\n  minicontainer: {\n    display: 'grid',\n    direction: 'row'\n  }\n}));\n\n\n\nclass AnswersComponent extends Component {\n\n  constructor(props) {\n    super(props)\n    this.onPressAnswer = this.onPressAnswer.bind(this)\n\n  }\n\n  onPressAnswer(answerObj){\n    let correctAnswer;\n    for (let i in this.props.answers) {\n      let currAnswerObj = this.props.answers[i]\n      if (currAnswerObj.correct) {\n        correctAnswer = entities.decode(currAnswerObj.text)\n        break\n      }\n    }\n\n    this.props.callback(answerObj.correct, correctAnswer)\n\n  }\n\n  render() {\n\n    const answer1  =  this.props.answers == null? \"Answer 1\" : this.props.answers[0]\n    const answer2  =  this.props.answers == null? \"Answer 2\" :this.props.answers[1]\n    const answer3  =  this.props.answers == null? \"Answer 3\" :this.props.answers[2]\n    const answer4  =  this.props.answers == null? \"Answer 4\" :this.props.answers[3]\n\n\n    return <Grid container\n    direction=\"column\"\n    justify=\"center\"\n    alignItems=\"center\"\n    spacing={2}>\n\n      <Grid minicontainer spacing={1}>\n        <Button  onClick={()=> this.onPressAnswer(answer1)}>{entities.decode(answer1.text)} </Button>\n        <Button  onClick={()=> this.onPressAnswer(answer2)}>{entities.decode(answer2.text)}</Button>\n      </Grid>\n\n      <Grid minicontainer spacing={1}>\n        <Button  onClick={()=> this.onPressAnswer(answer3)}>{entities.decode(answer3.text)} </Button>\n        <Button  onClick={()=> this.onPressAnswer(answer4)}>{entities.decode(answer4.text)}</Button>\n      </Grid>\n\n\n    </Grid>\n\n\n  }\n}\nexport default AnswersComponent;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/ken/Documents/Daimler/CabanaTrivia/pages/components/Start.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport DangerButton from './DangerButton';\nimport Grid from '@material-ui/core/Grid';\nconst styles = {\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column'\n  },\n  root: {\n    flexGrow: 1\n  }\n};\n\nclass StartComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startGame: true,\n      singlePlayer: true,\n      duration: 1\n    };\n    this.onClickStartGame = this.onClickStartGame.bind(this);\n    this.onClickSingle = this.onClickSingle.bind(this);\n    this.onClickMulti = this.onClickMulti.bind(this);\n  }\n\n  onClickStartGame() {\n    //change the state when the user clicks start game\n    if (this.state.startGame === true) {\n      this.setState({\n        startGame: false\n      });\n    } else {\n      this.setState({\n        startGame: true\n      });\n    }\n\n    this.props.callback(\"QUESTIONS\");\n  }\n\n  onClickSingle() {\n    this.setState({\n      singlePlayer: true\n    });\n  }\n\n  onClickMulti() {\n    this.setState({\n      singlePlayer: false\n    });\n  }\n\n  onSelectDuration(dur) {\n    this.setState({\n      duration: dur\n    });\n  }\n\n  render() {\n    const startButton = this.state.startGame ? __jsx(Button, {\n      variant: \"contained\",\n      onClick: this.onClickStartGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Start Game\") : __jsx(DangerButton, {\n      text: \"End Game\",\n      onClick: this.onClickStartGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    });\n    const singlePlayerSelector = this.state.singlePlayer ? __jsx(DangerButton, {\n      text: \"Single Player\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }) : __jsx(Button, {\n      variant: \"contained\",\n      onClick: this.onClickSingle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Single Player\");\n    const multiPlayerSelector = this.state.singlePlayer ? __jsx(Button, {\n      variant: \"contained\",\n      onClick: this.onClickMulti,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Multi Player\") : __jsx(DangerButton, {\n      text: \"Multi Player\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    });\n    const shortDurationSelector = this.state.duration === 1 ? __jsx(DangerButton, {\n      text: \"Short Game [10 min]\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }) : __jsx(Button, {\n      variant: \"contained\",\n      onClick: () => this.onSelectDuration(1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Short Game [10 min]\");\n    const medDurationSelector = this.state.duration === 2 ? __jsx(DangerButton, {\n      text: \"Medium Game [20 min]\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }) : __jsx(Button, {\n      variant: \"contained\",\n      onClick: () => this.onSelectDuration(2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Medium Game [20 min]\");\n    const longDurationSelector = this.state.duration === 3 ? __jsx(DangerButton, {\n      text: \"Long Game [30 min]\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }) : __jsx(Button, {\n      variant: \"contained\",\n      onClick: () => this.onSelectDuration(3),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Long Game [30 min]\");\n    return __jsx(\"div\", {\n      style: styles.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, __jsx(Grid, {\n      container: true,\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, singlePlayerSelector), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, multiPlayerSelector)), __jsx(Grid, {\n      container: true,\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, shortDurationSelector), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, medDurationSelector), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, longDurationSelector)), __jsx(Grid, {\n      container: true,\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, __jsx(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, startButton)));\n  }\n\n}\n\nexport default StartComponent;","map":{"version":3,"sources":["/Users/ken/Documents/Daimler/CabanaTrivia/pages/components/Start.js"],"names":["React","Component","Button","DangerButton","Grid","styles","container","display","justifyContent","alignItems","flexDirection","root","flexGrow","StartComponent","constructor","props","state","startGame","singlePlayer","duration","onClickStartGame","bind","onClickSingle","onClickMulti","setState","callback","onSelectDuration","dur","render","startButton","singlePlayerSelector","multiPlayerSelector","shortDurationSelector","medDurationSelector","longDurationSelector"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button'\nimport DangerButton from './DangerButton'\nimport Grid from '@material-ui/core/Grid'\n\n\nconst styles = ({\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column'\n  },\n  root: {\n    flexGrow: 1\n  }\n})\n\nclass StartComponent extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      startGame: true,\n      singlePlayer: true,\n      duration: 1\n    };\n\n\n    this.onClickStartGame = this.onClickStartGame.bind(this)\n    this.onClickSingle = this.onClickSingle.bind(this)\n    this.onClickMulti  = this.onClickMulti.bind(this)\n\n\n  }\n\n\n  onClickStartGame() {\n    //change the state when the user clicks start game\n    if (this.state.startGame === true) {\n      this.setState({ startGame: false })\n    } else {\n      this.setState({ startGame: true })\n    }\n    this.props.callback(\"QUESTIONS\")\n  }\n\n  onClickSingle() {\n    this.setState({ singlePlayer: true })\n\n  }\n\n  onClickMulti() {\n    this.setState({ singlePlayer: false })\n  }\n\n  onSelectDuration(dur) {\n    this.setState({ duration: dur })\n  }\n\n\n\n\n\n\n\n  render() {\n\n    const startButton = this.state.startGame ?\n      <Button variant=\"contained\" onClick={this.onClickStartGame} >\n        Start Game\n    </Button> :\n      <DangerButton text=\"End Game\" onClick={this.onClickStartGame}>\n      </DangerButton>\n\n    const singlePlayerSelector = this.state.singlePlayer ?\n      <DangerButton text=\"Single Player\">\n      </DangerButton> :\n      <Button variant=\"contained\" onClick={this.onClickSingle} >\n        Single Player\n    </Button>\n\n    const multiPlayerSelector = this.state.singlePlayer ?\n      <Button variant=\"contained\" onClick={this.onClickMulti} >\n        Multi Player\n    </Button> :\n      <DangerButton text=\"Multi Player\">\n      </DangerButton>\n\n    const shortDurationSelector = this.state.duration === 1 ?\n      <DangerButton text=\"Short Game [10 min]\">\n      </DangerButton> :\n      <Button variant=\"contained\" onClick={() => this.onSelectDuration(1)} >\n        Short Game [10 min]\n    </Button>\n\n    const medDurationSelector = this.state.duration === 2 ?\n      <DangerButton text=\"Medium Game [20 min]\">\n      </DangerButton> :\n      <Button variant=\"contained\" onClick={() => this.onSelectDuration(2)} >\n        Medium Game [20 min]\n    </Button>\n\n    const longDurationSelector = this.state.duration === 3 ?\n      <DangerButton text=\"Long Game [30 min]\">\n      </DangerButton> :\n      <Button variant=\"contained\" onClick={() => this.onSelectDuration(3)} >\n        Long Game [30 min]\n    </Button>\n    return <div style={styles.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={6}>\n          {singlePlayerSelector}\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          {multiPlayerSelector}\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={4}>\n          {shortDurationSelector}\n        </Grid>\n        <Grid item xs={12} sm={4}>\n          {medDurationSelector}\n        </Grid>\n        <Grid item xs={12} sm={4}>\n          {longDurationSelector}\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item>\n          {startButton}\n        </Grid>\n      </Grid>\n    </div>\n  }\n\n}\nexport default StartComponent;\n"]},"metadata":{},"sourceType":"module"}
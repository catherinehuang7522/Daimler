{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/johnsonsong/Desktop/Daimler/CabanaTrivia/pages/components/Start.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport DangerButton from './DangerButton';\nimport Grid from '@material-ui/core/Grid';\nimport { styles } from '../stylesheet.js';\nvar NUM_QUESTIONS_PER_MINUTE = 10;\n/* shown when user first starts playing - they can choose what type of game they want to play\ninitializes the state\n*/\n\nvar StartComponent = /*#__PURE__*/function (_Component) {\n  _inherits(StartComponent, _Component);\n\n  var _super = _createSuper(StartComponent);\n\n  function StartComponent(props) {\n    var _this;\n\n    _classCallCheck(this, StartComponent);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      randomvar: '',\n      startGame: true,\n      singlePlayer: true,\n      duration: 1\n    };\n    _this.onClickStartGame = _this.onClickStartGame.bind(_assertThisInitialized(_this));\n    _this.onClickSingle = _this.onClickSingle.bind(_assertThisInitialized(_this));\n    _this.onClickMulti = _this.onClickMulti.bind(_assertThisInitialized(_this));\n    return _this;\n  } // sets up the state to play a game for the prototype. Calls a callback function that will call the backhome function\n\n\n  _createClass(StartComponent, [{\n    key: \"onClickStartGame\",\n    value: function onClickStartGame() {\n      this.setState({\n        startGame: !this.state.startGame\n      });\n      this.props.callback(\"CATEGORIES\");\n    }\n  }, {\n    key: \"onClickSingle\",\n    value: function onClickSingle() {\n      this.setState({\n        singlePlayer: true\n      });\n    }\n  }, {\n    key: \"onClickMulti\",\n    value: function onClickMulti() {\n      this.setState({\n        singlePlayer: false\n      });\n    }\n  }, {\n    key: \"onSelectDuration\",\n    value: function onSelectDuration(dur) {\n      this.setState({\n        duration: dur\n      }); // this.props.setNumQuestionsCallback(dur * NUM_QUESTIONS_PER_MINUTE)\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var startButton = __jsx(Button, {\n        style: styles.unselectedButton,\n        variant: \"contained\",\n        onClick: this.onClickStartGame,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }\n      }, \"Start Game\");\n\n      var singlePlayerSelector = this.state.singlePlayer ? __jsx(DangerButton, {\n        text: \"Single Player\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }\n      }) : __jsx(Button, {\n        style: styles.unselectedButton,\n        variant: \"contained\",\n        onClick: this.onClickSingle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }\n      }, \"Single Player\");\n      var multiPlayerSelector = this.state.singlePlayer ? __jsx(Button, {\n        style: styles.unselectedButton,\n        variant: \"contained\",\n        onClick: this.onClickMulti,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }\n      }, \"Multi Player\") : __jsx(DangerButton, {\n        text: \"Multi Player\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }\n      });\n      var shortDurationSelector = this.state.duration === 1 ? __jsx(DangerButton, {\n        text: \"Short Game [10 min]\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 7\n        }\n      }) : __jsx(Button, {\n        style: styles.unselectedButton,\n        variant: \"contained\",\n        onClick: function onClick() {\n          return _this2.onSelectDuration(1);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }\n      }, \"Short Game [10 min]\");\n      var medDurationSelector = this.state.duration === 2 ? __jsx(DangerButton, {\n        text: \"Medium Game [20 min]\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }\n      }) : __jsx(Button, {\n        style: styles.unselectedButton,\n        variant: \"contained\",\n        onClick: function onClick() {\n          return _this2.onSelectDuration(2);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }\n      }, \"Medium Game [20 min]\");\n      var longDurationSelector = this.state.duration === 3 ? __jsx(DangerButton, {\n        text: \"Long Game [30 min]\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 7\n        }\n      }) : __jsx(Button, {\n        style: styles.unselectedButton,\n        variant: \"contained\",\n        onClick: function onClick() {\n          return _this2.onSelectDuration(3);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }\n      }, \"Long Game [30 min]\");\n      return __jsx(\"div\", {\n        style: styles.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }\n      }, __jsx(Grid, {\n        style: styles.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }\n      }, \" TRIVIA \"), __jsx(Grid, {\n        style: styles.row,\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }\n      }, singlePlayerSelector, multiPlayerSelector), __jsx(Grid, {\n        style: styles.row,\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }\n      }, shortDurationSelector, medDurationSelector, longDurationSelector), __jsx(Grid, {\n        style: styles.row,\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }\n      }, startButton));\n    }\n  }]);\n\n  return StartComponent;\n}(Component);\n\nexport default StartComponent;","map":{"version":3,"sources":["/Users/johnsonsong/Desktop/Daimler/CabanaTrivia/pages/components/Start.js"],"names":["React","Component","Button","DangerButton","Grid","styles","NUM_QUESTIONS_PER_MINUTE","StartComponent","props","state","randomvar","startGame","singlePlayer","duration","onClickStartGame","bind","onClickSingle","onClickMulti","setState","callback","dur","startButton","unselectedButton","singlePlayerSelector","multiPlayerSelector","shortDurationSelector","onSelectDuration","medDurationSelector","longDurationSelector","root","title","row"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button'\nimport DangerButton from './DangerButton'\nimport Grid from '@material-ui/core/Grid'\nimport { styles } from '../stylesheet.js'\n\nconst NUM_QUESTIONS_PER_MINUTE = 10\n\n/* shown when user first starts playing - they can choose what type of game they want to play\ninitializes the state\n*/\nclass StartComponent extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      randomvar: '',\n      startGame: true,\n      singlePlayer: true,\n      duration: 1\n    };\n\n    this.onClickStartGame = this.onClickStartGame.bind(this)\n    this.onClickSingle = this.onClickSingle.bind(this)\n    this.onClickMulti  = this.onClickMulti.bind(this)\n  }\n\n\n  // sets up the state to play a game for the prototype. Calls a callback function that will call the backhome function\n  onClickStartGame() {\n    this.setState({ startGame: !this.state.startGame })\n    this.props.callback(\"CATEGORIES\")\n  }\n\n  onClickSingle() {\n    this.setState({ singlePlayer: true })\n\n  }\n\n  onClickMulti() {\n    this.setState({ singlePlayer: false })\n  }\n\n  onSelectDuration(dur) {\n    this.setState({ duration: dur })\n    // this.props.setNumQuestionsCallback(dur * NUM_QUESTIONS_PER_MINUTE)\n  }\n\n  render() {\n    const startButton =\n      <Button style={styles.unselectedButton} variant=\"contained\" onClick={this.onClickStartGame} >\n        Start Game\n      </Button>\n\n    const singlePlayerSelector = this.state.singlePlayer ?\n      <DangerButton text=\"Single Player\"/>\n      :\n      <Button style={styles.unselectedButton} variant=\"contained\" onClick={this.onClickSingle} >\n        Single Player\n      </Button>\n\n    const multiPlayerSelector = this.state.singlePlayer ?\n      <Button style={styles.unselectedButton} variant=\"contained\" onClick={this.onClickMulti} >\n        Multi Player\n      </Button>\n      :\n      <DangerButton text=\"Multi Player\"/>\n\n    const shortDurationSelector = this.state.duration === 1 ?\n      <DangerButton text=\"Short Game [10 min]\"/>\n      :\n      <Button style={styles.unselectedButton}  variant=\"contained\" onClick={() => this.onSelectDuration(1)} >\n        Short Game [10 min]\n      </Button>\n\n    const medDurationSelector = this.state.duration === 2 ?\n      <DangerButton text=\"Medium Game [20 min]\"/>\n      :\n      <Button style={styles.unselectedButton}  variant=\"contained\" onClick={() => this.onSelectDuration(2)} >\n        Medium Game [20 min]\n      </Button>\n\n    const longDurationSelector = this.state.duration === 3 ?\n      <DangerButton text=\"Long Game [30 min]\"/>\n      :\n      <Button style={styles.unselectedButton} variant=\"contained\" onClick={() => this.onSelectDuration(3)} >\n        Long Game [30 min]\n      </Button>\n\n    return (\n      <div style={styles.root}>\n        <Grid style={styles.title}> TRIVIA </Grid>\n\n        <Grid style={styles.row} spacing={3}>\n          {singlePlayerSelector}\n          {multiPlayerSelector}\n        </Grid>\n\n        <Grid style={styles.row} spacing={3}>\n          {shortDurationSelector}\n          {medDurationSelector}\n          {longDurationSelector}\n        </Grid>\n\n        <Grid style={styles.row} spacing={3}>\n          {startButton}\n        </Grid>\n      </div>\n    );\n  }\n\n}\nexport default StartComponent;\n"]},"metadata":{},"sourceType":"module"}
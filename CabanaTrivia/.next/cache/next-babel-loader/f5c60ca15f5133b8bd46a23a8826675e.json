{"ast":null,"code":"var _jsxFileName = \"/Users/johnsonsong/Desktop/Daimler/CabanaTrivia/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport DangerButton from './components/DangerButton';\nimport Grid from '@material-ui/core/Grid';\nimport StartComponent from './components/Start';\nimport QuestionsComponent from './components/Questions';\nconst styles = {};\nexport default class IndexPage extends Component {\n  constructor(props) {\n    super(props); // initialize the game state\n\n    this.state = {\n      gameState: \"START\",\n      numQuestions: 10\n    };\n    this.renderSwitch = this.renderSwitch.bind(this);\n    this.backHome = this.backHome.bind(this);\n    this.setNumQuestions = this.setNumQuestions.bind(this);\n  } // changes the state of the game to whatever is passed as \"nextActions\". Can be e.g. START or QUESTIONS\n\n\n  backHome(nextActions) {\n    this.setState({\n      gameState: nextActions\n    });\n  } // sets the number of questions\n\n\n  setNumQuestions(numQuestions) {\n    this.setState({\n      numQuestions: numQuestions\n    });\n  } // reder the desired componenent based on the state\n\n\n  renderSwitch(gameState) {\n    switch (gameState) {\n      case 'START':\n        return __jsx(StartComponent, {\n          callback: this.backHome,\n          setNumQuestionsCallback: this.setNumQuestions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        });\n\n      case 'QUESTIONS':\n        return __jsx(QuestionsComponent, {\n          callback: this.backHome,\n          numQuestions: this.state.numQuestions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        });\n\n      default:\n        return __jsx(StartComponent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        });\n    }\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, \" \", this.renderSwitch(this.state.gameState));\n  }\n\n}","map":{"version":3,"sources":["/Users/johnsonsong/Desktop/Daimler/CabanaTrivia/pages/index.js"],"names":["React","Component","Button","DangerButton","Grid","StartComponent","QuestionsComponent","styles","IndexPage","constructor","props","state","gameState","numQuestions","renderSwitch","bind","backHome","setNumQuestions","nextActions","setState","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,OAAOC,kBAAP,MAA+B,wBAA/B;AAGA,MAAMC,MAAM,GAAI,EAAhB;AAIA,eAAe,MAAMC,SAAN,SAAwBP,SAAxB,CAAkC;AAE/CQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAGjB;;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,OADA;AAEXC,MAAAA,YAAY,EAAE;AAFH,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKE,eAAL,GAAuB,KAAKA,eAAL,CAAqBF,IAArB,CAA0B,IAA1B,CAAvB;AACD,GAd8C,CAgB/C;;;AACAC,EAAAA,QAAQ,CAACE,WAAD,EAAc;AACpB,SAAKC,QAAL,CAAc;AAACP,MAAAA,SAAS,EAACM;AAAX,KAAd;AACD,GAnB8C,CAqB/C;;;AACAD,EAAAA,eAAe,CAACJ,YAAD,EAAe;AAC5B,SAAKM,QAAL,CAAc;AAACN,MAAAA,YAAY,EAAEA;AAAf,KAAd;AACD,GAxB8C,CA0B/C;;;AACAC,EAAAA,YAAY,CAACF,SAAD,EAAY;AACtB,YAAQA,SAAR;AACE,WAAK,OAAL;AACE,eAAO,MAAC,cAAD;AAAgB,UAAA,QAAQ,EAAE,KAAKI,QAA/B;AAAyC,UAAA,uBAAuB,EAAE,KAAKC,eAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACF,WAAK,WAAL;AACE,eAAO,MAAC,kBAAD;AAAoB,UAAA,QAAQ,EAAE,KAAKD,QAAnC;AAA6C,UAAA,YAAY,EAAE,KAAKL,KAAL,CAAWE,YAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACF;AACE,eAAO,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AANJ;AAQD;;AAIDO,EAAAA,MAAM,GAAG;AACP,WAAO,iCAAI,KAAKN,YAAL,CAAkB,KAAKH,KAAL,CAAWC,SAA7B,CAAJ,CAAP;AACD;;AA1C8C","sourcesContent":["import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button'\nimport DangerButton from './components/DangerButton'\nimport Grid from '@material-ui/core/Grid'\nimport StartComponent from './components/Start'\nimport QuestionsComponent from './components/Questions'\n\n\nconst styles = ({\n\n})\n\nexport default class IndexPage extends Component {\n\n  constructor(props) {\n    super(props)\n\n    // initialize the game state\n    this.state = {\n      gameState: \"START\",\n      numQuestions: 10,\n    };\n\n    this.renderSwitch = this.renderSwitch.bind(this)\n    this.backHome = this.backHome.bind(this)\n    this.setNumQuestions = this.setNumQuestions.bind(this)\n  }\n\n  // changes the state of the game to whatever is passed as \"nextActions\". Can be e.g. START or QUESTIONS\n  backHome(nextActions) {\n    this.setState({gameState:nextActions})\n  }\n\n  // sets the number of questions\n  setNumQuestions(numQuestions) {\n    this.setState({numQuestions: numQuestions})\n  }\n\n  // reder the desired componenent based on the state\n  renderSwitch(gameState) {\n    switch (gameState) {\n      case 'START':\n        return <StartComponent callback={this.backHome} setNumQuestionsCallback={this.setNumQuestions}></StartComponent>\n      case 'QUESTIONS':\n        return <QuestionsComponent callback={this.backHome} numQuestions={this.state.numQuestions}></QuestionsComponent>\n      default:\n        return <StartComponent></StartComponent>\n    }\n  }\n\n\n\n  render() {\n    return <> {this.renderSwitch(this.state.gameState)}</>\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
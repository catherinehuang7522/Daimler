{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/paulinaanzaldo/Daimler/CabanaTrivia/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport DangerButton from './components/DangerButton';\nimport Grid from '@material-ui/core/Grid';\nimport StartComponent from './components/Start';\nimport QuestionsComponent from './components/Questions';\nimport CategoriesComponent from './components/Categories';\nimport DifficultyComponent from './components/Difficulty';\nvar styles = {};\n\nvar IndexPage = /*#__PURE__*/function (_Component) {\n  _inherits(IndexPage, _Component);\n\n  function IndexPage(props) {\n    var _this;\n\n    _classCallCheck(this, IndexPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(IndexPage).call(this, props)); // initialize the game state\n\n    _this.state = {\n      gameState: \"START\",\n      catArray: [],\n      gameDifficulty: \"\"\n    };\n    _this.renderSwitch = _this.renderSwitch.bind(_assertThisInitialized(_this));\n    _this.backHome = _this.backHome.bind(_assertThisInitialized(_this));\n    _this.fromDifficultyToQuestions = _this.fromDifficultyToQuestions.bind(_assertThisInitialized(_this));\n    _this.fromCategoriestoDifficulty = _this.fromCategoriestoDifficulty.bind(_assertThisInitialized(_this));\n    return _this;\n  } // changes the state of the game to whatever is passed as \"nextActions\". Can be e.g. START or QUESTIONS\n\n\n  _createClass(IndexPage, [{\n    key: \"backHome\",\n    value: function backHome(nextActions) {\n      this.setState({\n        gameState: nextActions\n      });\n    }\n  }, {\n    key: \"fromCategoriestoDifficulty\",\n    value: function fromCategoriestoDifficulty(nextActions, catArray) {\n      this.setState({\n        gameState: nextActions\n      });\n      this.setState({\n        catArray: catArray\n      });\n    }\n  }, {\n    key: \"fromDifficultyToQuestions\",\n    value: function fromDifficultyToQuestions(nextActions, difficulty) {\n      this.setState({\n        gameState: nextActions\n      });\n      this.setState({\n        gameDifficulty: difficulty\n      });\n    } // reder the desired componenent based on the state\n\n  }, {\n    key: \"renderSwitch\",\n    value: function renderSwitch(gameState) {\n      switch (gameState) {\n        case 'START':\n          return __jsx(StartComponent, {\n            callback: this.backHome,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          });\n\n        case 'CATEGORIES':\n          return __jsx(CategoriesComponent, {\n            callback: this.backHome,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          });\n\n        case 'QUESTIONS':\n          return __jsx(QuestionsComponent, {\n            callback: this.fromDifficultyToQuestions,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          });\n\n        case 'DIFFICULTY':\n          return __jsx(DifficultyComponent, {\n            callback: this.fromCategoriestoDifficulty,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          });\n\n        default:\n          return __jsx(StartComponent, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, \" \", this.renderSwitch(this.state.gameState));\n    }\n  }]);\n\n  return IndexPage;\n}(Component);\n\nexport { IndexPage as default };","map":{"version":3,"sources":["/Users/paulinaanzaldo/Daimler/CabanaTrivia/pages/index.js"],"names":["React","Component","Button","DangerButton","Grid","StartComponent","QuestionsComponent","CategoriesComponent","DifficultyComponent","styles","IndexPage","props","state","gameState","catArray","gameDifficulty","renderSwitch","bind","backHome","fromDifficultyToQuestions","fromCategoriestoDifficulty","nextActions","setState","difficulty"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,OAAOC,kBAAP,MAA+B,wBAA/B;AACA,OAAOC,mBAAP,MAAgC,yBAAhC;AACA,OAAOC,mBAAP,MAAgC,yBAAhC;AAGA,IAAMC,MAAM,GAAI,EAAhB;;IAIqBC,S;;;AAEnB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN,GADiB,CAGjB;;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,OADA;AAEXC,MAAAA,QAAQ,EAAC,EAFE;AAGXC,MAAAA,cAAc,EAAC;AAHJ,KAAb;AAMA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB;AACA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcD,IAAd,+BAAhB;AACA,UAAKE,yBAAL,GAAiC,MAAKA,yBAAL,CAA+BF,IAA/B,+BAAjC;AACA,UAAKG,0BAAL,GAAkC,MAAKA,0BAAL,CAAgCH,IAAhC,+BAAlC;AAbiB;AAclB,G,CAED;;;;;6BACSI,W,EAAY;AACnB,WAAKC,QAAL,CAAc;AAACT,QAAAA,SAAS,EAACQ;AAAX,OAAd;AAED;;;+CAE0BA,W,EAAaP,Q,EAAS;AAC/C,WAAKQ,QAAL,CAAc;AAACT,QAAAA,SAAS,EAAEQ;AAAZ,OAAd;AACA,WAAKC,QAAL,CAAc;AAACR,QAAAA,QAAQ,EAAEA;AAAX,OAAd;AACD;;;8CAEyBO,W,EAAaE,U,EAAW;AAChD,WAAKD,QAAL,CAAc;AAACT,QAAAA,SAAS,EAAEQ;AAAZ,OAAd;AACA,WAAKC,QAAL,CAAc;AAACP,QAAAA,cAAc,EAAEQ;AAAjB,OAAd;AACD,K,CAED;;;;iCACaV,S,EAAW;AACtB,cAAQA,SAAR;AACE,aAAK,OAAL;AACE,iBAAO,MAAC,cAAD;AAAgB,YAAA,QAAQ,EAAE,KAAKK,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;;AACF,aAAK,YAAL;AACE,iBAAO,MAAC,mBAAD;AAAqB,YAAA,QAAQ,EAAE,KAAKA,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;;AACF,aAAK,WAAL;AACE,iBAAO,MAAC,kBAAD;AAAoB,YAAA,QAAQ,EAAE,KAAKC,yBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;;AACF,aAAK,YAAL;AACE,iBAAO,MAAC,mBAAD;AAAqB,YAAA,QAAQ,EAAE,KAAKC,0BAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;;AACF;AACE,iBAAO,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAVJ;AAYD;;;6BAIQ;AACP,aAAO,iCAAI,KAAKJ,YAAL,CAAkB,KAAKJ,KAAL,CAAWC,SAA7B,CAAJ,CAAP;AACD;;;;EAtDoCZ,S;;SAAlBS,S","sourcesContent":["import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button'\nimport DangerButton from './components/DangerButton'\nimport Grid from '@material-ui/core/Grid'\nimport StartComponent from './components/Start'\nimport QuestionsComponent from './components/Questions'\nimport CategoriesComponent from './components/Categories'\nimport DifficultyComponent from './components/Difficulty'\n\n\nconst styles = ({\n\n})\n\nexport default class IndexPage extends Component {\n\n  constructor(props) {\n    super(props)\n\n    // initialize the game state\n    this.state = {\n      gameState: \"START\",\n      catArray:[],\n      gameDifficulty:\"\",\n    };\n\n    this.renderSwitch = this.renderSwitch.bind(this)\n    this.backHome = this.backHome.bind(this)\n    this.fromDifficultyToQuestions = this.fromDifficultyToQuestions.bind(this)\n    this.fromCategoriestoDifficulty = this.fromCategoriestoDifficulty.bind(this)\n  }\n\n  // changes the state of the game to whatever is passed as \"nextActions\". Can be e.g. START or QUESTIONS\n  backHome(nextActions){\n    this.setState({gameState:nextActions})\n\n  }\n\n  fromCategoriestoDifficulty(nextActions, catArray){\n    this.setState({gameState: nextActions})\n    this.setState({catArray: catArray})\n  }\n\n  fromDifficultyToQuestions(nextActions, difficulty){\n    this.setState({gameState: nextActions})\n    this.setState({gameDifficulty: difficulty})\n  }\n\n  // reder the desired componenent based on the state\n  renderSwitch(gameState) {\n    switch (gameState) {\n      case 'START':\n        return <StartComponent callback={this.backHome}></StartComponent>\n      case 'CATEGORIES':\n        return <CategoriesComponent callback={this.backHome}></CategoriesComponent>\n      case 'QUESTIONS':\n        return <QuestionsComponent callback={this.fromDifficultyToQuestions}></QuestionsComponent>\n      case 'DIFFICULTY':\n        return <DifficultyComponent callback={this.fromCategoriestoDifficulty}></DifficultyComponent>\n      default:\n        return <StartComponent></StartComponent>\n    }\n  }\n\n\n\n  render() {\n    return <> {this.renderSwitch(this.state.gameState)}</>\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
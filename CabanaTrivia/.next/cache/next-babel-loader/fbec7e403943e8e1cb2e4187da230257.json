{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport DangerButton from './DangerButton';\nimport Grid from '@material-ui/core/Grid';\nimport { styles } from '../stylesheet.js';\n/* shown when user first starts playing - they can choose what type of game they want to play\ninitializes the state\n*/\n\nclass StartComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      randomvar: '',\n      startGame: true,\n      singlePlayer: true,\n      duration: 1\n    };\n    this.onClickStartGame = this.onClickStartGame.bind(this);\n    this.onClickSingle = this.onClickSingle.bind(this);\n    this.onClickMulti = this.onClickMulti.bind(this);\n  } // sets up the state to play a game for the prototype. Calls a callback function that will call the backhome function\n\n\n  onClickStartGame() {\n    this.setState({\n      startGame: !this.state.startGame\n    });\n    this.props.callback(\"QUESTIONS\");\n  }\n\n  onClickSingle() {\n    this.setState({\n      singlePlayer: true\n    });\n  }\n\n  onClickMulti() {\n    this.setState({\n      singlePlayer: false\n    });\n  }\n\n  onSelectDuration(dur) {\n    this.setState({\n      duration: dur\n    });\n  }\n\n  render() {\n    const startButton = __jsx(Button, {\n      style: styles.unselectedButton,\n      variant: \"contained\",\n      onClick: this.onClickStartGame\n    }, \"Start Game\");\n\n    const singlePlayerSelector = this.state.singlePlayer ? __jsx(DangerButton, {\n      text: \"Single Player\"\n    }) : __jsx(Button, {\n      style: styles.unselectedButton,\n      variant: \"contained\",\n      onClick: this.onClickSingle\n    }, \"Single Player\");\n    const multiPlayerSelector = this.state.singlePlayer ? __jsx(Button, {\n      style: styles.unselectedButton,\n      variant: \"contained\",\n      onClick: this.onClickMulti\n    }, \"Multi Player\") : __jsx(DangerButton, {\n      text: \"Multi Player\"\n    });\n    const shortDurationSelector = this.state.duration === 1 ? __jsx(DangerButton, {\n      text: \"Short Game [10 min]\"\n    }) : __jsx(Button, {\n      style: styles.unselectedButton,\n      variant: \"contained\",\n      onClick: () => this.onSelectDuration(1)\n    }, \"Short Game [10 min]\");\n    const medDurationSelector = this.state.duration === 2 ? __jsx(DangerButton, {\n      text: \"Medium Game [20 min]\"\n    }) : __jsx(Button, {\n      style: styles.unselectedButton,\n      variant: \"contained\",\n      onClick: () => this.onSelectDuration(2)\n    }, \"Medium Game [20 min]\");\n    const longDurationSelector = this.state.duration === 3 ? __jsx(DangerButton, {\n      text: \"Long Game [30 min]\"\n    }) : __jsx(Button, {\n      style: styles.unselectedButton,\n      variant: \"contained\",\n      onClick: () => this.onSelectDuration(3)\n    }, \"Long Game [30 min]\");\n    return __jsx(\"div\", {\n      style: styles.root\n    }, __jsx(Grid, {\n      style: styles.title\n    }, \" TRIVIA \"), __jsx(Grid, {\n      style: styles.row,\n      spacing: 3\n    }, singlePlayerSelector, multiPlayerSelector), __jsx(Grid, {\n      style: styles.row,\n      spacing: 3\n    }, shortDurationSelector, medDurationSelector, longDurationSelector), __jsx(Grid, {\n      style: styles.row,\n      spacing: 3\n    }, startButton));\n  }\n\n}\n\nexport default StartComponent;","map":null,"metadata":{},"sourceType":"module"}
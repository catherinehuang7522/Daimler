{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/johnsonsong/Desktop/Daimler/CabanaTrivia/pages/components/Categories.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport DangerButton from './DangerButton';\nimport CategoriesButton from './CategoriesButton';\nimport Grid from '@material-ui/core/Grid';\nimport { styles } from '../stylesheet.js';\n/* shown when user first starts playing - they can choose what type of game they want to play\ninitializes the state\n*/\n\nvar CategoriesComponent = /*#__PURE__*/function (_Component) {\n  _inherits(CategoriesComponent, _Component);\n\n  function CategoriesComponent(props) {\n    var _this;\n\n    _classCallCheck(this, CategoriesComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CategoriesComponent).call(this, props));\n    _this.state = {\n      isUnselected: true,\n      generalKnowledge: false,\n      film: false,\n      switchcienceNature: false,\n      sports: false,\n      history: false,\n      tv: false,\n      books: false,\n      music: false,\n      mythology: false,\n      geography: false,\n      art: false,\n      videoGames: false\n    };\n    _this.onClickCat = _this.onClickCat.bind(_assertThisInitialized(_this));\n    return _this;\n  } //Set the value of the category chosen as true\n\n\n  _createClass(CategoriesComponent, [{\n    key: \"onClickCat\",\n    value: function onClickCat(someCategory) {\n      this.setState({\n        someCategory: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //By default, our categoty buttons are all unselected. When selected, the button looks selected\n      //TODO: Pass a function that will change the boolen of individual category\n      //Example is given on General Knowledge\n      var generalKnowledgeButton = this.state.isUnselected ? __jsx(CategoriesButton, {\n        text: \"General Knowledge\",\n        hasChosenCategory: this.onClickCat(generalKnowledge),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }) : __jsx(DangerButton, {\n        text: \"General Knowledge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      });\n      var filmButton = this.state.isUnselected ? __jsx(CategoriesButton, {\n        text: \"Film\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }) : __jsx(DangerButton, {\n        text: \"Film\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      });\n      var scienceNatureButton = this.state.isUnselected ? __jsx(CategoriesButton, {\n        text: \"Science and Nature\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }) : __jsx(DangerButton, {\n        text: \"Science and Nature\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      });\n      var sportsButton = this.state.isUnselected ? __jsx(CategoriesButton, {\n        text: \"Sports\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }) : __jsx(DangerButton, {\n        text: \"Sports\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      });\n      var historyButton = this.state.isUnselected ? __jsx(CategoriesButton, {\n        text: \"History\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }) : __jsx(DangerButton, {\n        text: \"History\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      });\n      var tvButton = this.state.isUnselected ? __jsx(CategoriesButton, {\n        text: \"Television\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }) : __jsx(DangerButton, {\n        text: \"Television\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      });\n      var booksButton = this.state.isUnselected ? __jsx(CategoriesButton, {\n        text: \"Books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }) : __jsx(DangerButton, {\n        text: \"Books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      });\n      var musicButton = this.state.isUnselected ? __jsx(CategoriesButton, {\n        text: \"Books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }) : __jsx(DangerButton, {\n        text: \"Books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      });\n      var mythologyButton = this.state.isUnselected ? __jsx(CategoriesButton, {\n        text: \"Mythology\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }) : __jsx(DangerButton, {\n        text: \"Mythology\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      });\n      var geographyButton = this.state.isUnselected ? __jsx(CategoriesButton, {\n        text: \"Geography\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }) : __jsx(DangerButton, {\n        text: \"Geography\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      });\n      var artButton = this.state.isUnselected ? __jsx(CategoriesButton, {\n        text: \"Art\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }) : __jsx(DangerButton, {\n        text: \"Art\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      });\n      var videoGamesButton = this.state.isUnselected ? __jsx(CategoriesButton, {\n        text: \"Art\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }) : __jsx(DangerButton, {\n        text: \"Art\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      });\n      return (//TODO: Make sure that styles.column does actually style to 2 columns. Check the stylesheet.js file\n        __jsx(\"div\", {\n          style: styles.root,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, __jsx(Grid, {\n          style: styles.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, \" SELECT UP TO 3 CATEGORIES \"), \"//Column 1\", __jsx(Grid, {\n          style: styles.column,\n          spacing: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, generalKnowledgeButton, filmButton, scienceNatureButton, sportsButton, historyButton, tvButton), \"//Column 2\", __jsx(Grid, {\n          style: styles.column,\n          spacing: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, booksButton, musicButton, mythologyButton, geographyButton, artButton, videoGamesButton), \"//TODO: //Add some arrow button that would mean \\\"Next\\\". //Not yet implemented\")\n      );\n    }\n  }]);\n\n  return CategoriesComponent;\n}(Component);\n\nexport default CategoriesComponent;","map":{"version":3,"sources":["/Users/johnsonsong/Desktop/Daimler/CabanaTrivia/pages/components/Categories.js"],"names":["React","Component","Button","DangerButton","CategoriesButton","Grid","styles","CategoriesComponent","props","state","isUnselected","generalKnowledge","film","switchcienceNature","sports","history","tv","books","music","mythology","geography","art","videoGames","onClickCat","bind","someCategory","setState","generalKnowledgeButton","filmButton","scienceNatureButton","sportsButton","historyButton","tvButton","booksButton","musicButton","mythologyButton","geographyButton","artButton","videoGamesButton","root","title","column"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button'\nimport DangerButton from './DangerButton'\nimport CategoriesButton from './CategoriesButton'\nimport Grid from '@material-ui/core/Grid'\nimport { styles } from '../stylesheet.js'\n\n/* shown when user first starts playing - they can choose what type of game they want to play\ninitializes the state\n*/\nclass CategoriesComponent extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      isUnselected: true,\n\n      generalKnowledge: false,\n      film: false,\n      switchcienceNature: false,\n      sports: false,\n      history: false,\n      tv: false,\n      books: false,\n      music: false,\n      mythology: false,\n      geography: false,\n      art: false,\n      videoGames: false,\n\n    };\n    this.onClickCat = this.onClickCat.bind(this)\n  }\n\n  //Set the value of the category chosen as true\n  onClickCat(someCategory) {\n    this.setState({ someCategory: true })\n  }\n\n  render() {\n    //By default, our categoty buttons are all unselected. When selected, the button looks selected\n    //TODO: Pass a function that will change the boolen of individual category\n    //Example is given on General Knowledge\n    const generalKnowledgeButton = this.state.isUnselected ?\n      <CategoriesButton text=\"General Knowledge\" hasChosenCategory= {this.onClickCat(generalKnowledge)} /> : <DangerButton text=\"General Knowledge\"/>\n\n    const filmButton = this.state.isUnselected ?\n      <CategoriesButton text=\"Film\"/> : <DangerButton text=\"Film\"/>\n\n    const scienceNatureButton = this.state.isUnselected ?\n      <CategoriesButton text=\"Science and Nature\"/> : <DangerButton text=\"Science and Nature\"/>\n\n    const sportsButton = this.state.isUnselected ?\n      <CategoriesButton text=\"Sports\"/> : <DangerButton text=\"Sports\"/>\n\n    const historyButton = this.state.isUnselected ?\n      <CategoriesButton text=\"History\"/> : <DangerButton text=\"History\"/>\n\n    const tvButton = this.state.isUnselected ?\n      <CategoriesButton text=\"Television\"/> : <DangerButton text=\"Television\"/>\n\n    const booksButton = this.state.isUnselected ?\n      <CategoriesButton text=\"Books\"/> : <DangerButton text=\"Books\"/>\n\n    const musicButton = this.state.isUnselected ?\n      <CategoriesButton text=\"Books\"/> : <DangerButton text=\"Books\"/>\n\n    const mythologyButton = this.state.isUnselected ?\n      <CategoriesButton text=\"Mythology\"/> : <DangerButton text=\"Mythology\"/>\n\n    const geographyButton = this.state.isUnselected ?\n      <CategoriesButton text=\"Geography\"/> : <DangerButton text=\"Geography\"/>\n\n    const artButton = this.state.isUnselected ?\n      <CategoriesButton text=\"Art\"/> : <DangerButton text=\"Art\"/>\n\n    const videoGamesButton = this.state.isUnselected ?\n      <CategoriesButton text=\"Art\"/> : <DangerButton text=\"Art\"/>\n\n\n    return (\n\n      //TODO: Make sure that styles.column does actually style to 2 columns. Check the stylesheet.js file\n      <div style={styles.root}>\n        <Grid style={styles.title}> SELECT UP TO 3 CATEGORIES </Grid>\n\n\n        //Column 1\n        <Grid style={styles.column} spacing={3}>\n          {generalKnowledgeButton}\n          {filmButton}\n          {scienceNatureButton}\n          {sportsButton}\n          {historyButton}\n          {tvButton}\n        </Grid>\n\n        //Column 2\n        <Grid style={styles.column} spacing={3}>\n          {booksButton}\n          {musicButton}\n          {mythologyButton}\n          {geographyButton}\n          {artButton}\n          {videoGamesButton}\n        </Grid>\n\n        //TODO:\n        //Add some arrow button that would mean \"Next\".\n        //Not yet implemented\n\n      </div>\n    );\n  }\n\n}\nexport default CategoriesComponent;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/ken/Documents/Daimler/CabanaTrivia/pages/components/Questions.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport DangerButton from './DangerButton';\nimport Grid from '@material-ui/core/Grid';\nimport AnswersComponent from './Answers';\nconst styles = {\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column'\n  },\n  root: {\n    flexGrow: 1\n  }\n};\n\nclass QuestionsComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startGame: true,\n      singlePlayer: true,\n      duration: 1,\n      questionIndex: 0,\n      currentScore: 0\n    };\n    this.nextQuestion = this.nextQuestion.bind(this);\n  }\n\n  componentWillMount() {\n    this.onGetQuestions();\n  }\n\n  async onGetQuestions(category) {\n    const finalCateg = category == null ? \"entertainment-music\" : category;\n    console.log(\"Starting out\"); //fetch questions\n\n    const response = await fetch(\"https://cocktail-trivia-api.herokuapp.com/api/category/\" + finalCateg);\n    console.log(\"response is: \");\n    console.log(response);\n    const allData = await response.json();\n    console.log(\"All Data: \");\n    console.log(allData);\n    this.setState({\n      questionsArr: allData\n    });\n    this.setState({\n      currentQ: allData[this.state.questionIndex].text\n    });\n    this.setState({\n      currentAnswers: allData[this.state.questionIndex].answers\n    });\n    console.log(\"The State:\");\n    console.log(this.state);\n  }\n\n  nextQuestion(isCorrect) {\n    console.log(\"Callback answered: \" + isCorrect);\n    const score = isCorrect ? this.state.currentScore + 1 : this.state.currentScore;\n    const nextQIndex = this.state.questionIndex++;\n    console.log();\n    this.setState({\n      currentScore: score\n    });\n    this.setState({\n      questionIndex: nextQIndex\n    });\n    console.log(\"Finished setting state\");\n    console.log(this.state.questionIndex);\n  }\n\n  render() {\n    return __jsx(Grid, {\n      container: true,\n      direction: \"column\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, this.state.questionsArr && this.state.questionsArr[this.state.questionIndex].text), __jsx(AnswersComponent, {\n      answers: this.state.questionsArr && this.state.questionsArr[this.state.questionIndex].answers,\n      callback: this.nextQuestion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default QuestionsComponent; // import React, { Component } from 'react';\n// import Button from '@material-ui/core/Button'\n// import Grid from '@material-ui/core/Grid';\n// class QuestionsComponent extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { questionsArr: [] };\n//     this.onGetQuestions = this.onGetQuestions.bind(this);\n//     this.onClickAnswer = this.onClickAnswer.bind(this);\n//   }\n//   async onGetQuestions(category) {\n//     const finalCateg = category == null ? category : \"entertainment-music\";\n//     console.log(\"Starting out\");\n//     //fetch questions\n//     //https://cocktail-trivia-api.herokuapp.com/api/category/entertainment-music\n//     // const response = await fetch(\"https://cocktail-trivia-api.herokuapp.com/api/category/\" + finalCateg)\n//     // const allData = await response.json()\n//     const allData = []\n//     this.setState({ questionsArr: allData })\n//     this.setState({ currentQ: allData[0].text })\n//     this.setState({ currentAnswers: allData[0].answers })\n//     console.log(\"Got the data:\")\n//     console.log(allData)\n//   }\n//   onClickAnswer() {\n//   }\n//   async render() {\n//    // await this.onGetQuestions()\n//     // <AnswersComponent answers={this.state.currentAnswers}></AnswersComponent>\n//     return  <p>First Question</p>\n//   }\n// }\n// export default QuestionsComponent;","map":{"version":3,"sources":["/Users/ken/Documents/Daimler/CabanaTrivia/pages/components/Questions.js"],"names":["React","Component","Button","DangerButton","Grid","AnswersComponent","styles","container","display","justifyContent","alignItems","flexDirection","root","flexGrow","QuestionsComponent","constructor","props","state","startGame","singlePlayer","duration","questionIndex","currentScore","nextQuestion","bind","componentWillMount","onGetQuestions","category","finalCateg","console","log","response","fetch","allData","json","setState","questionsArr","currentQ","text","currentAnswers","answers","isCorrect","score","nextQIndex","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button'\nimport DangerButton from './DangerButton'\nimport Grid from '@material-ui/core/Grid'\nimport AnswersComponent from './Answers'\n\n\nconst styles = ({\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column'\n  },\n  root: {\n    flexGrow: 1\n  }\n})\n\nclass QuestionsComponent extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      startGame: true,\n      singlePlayer: true,\n      duration: 1,\n      questionIndex : 0,\n      currentScore: 0,\n    };\n\n    this.nextQuestion = this.nextQuestion.bind(this)\n  }\n\n  componentWillMount(){\n    this.onGetQuestions()\n  }\n\n\n  async onGetQuestions(category) {\n    const finalCateg = category == null ? \"entertainment-music\" : category\n\n    console.log(\"Starting out\")\n    //fetch questions\n    const response = await fetch(\"https://cocktail-trivia-api.herokuapp.com/api/category/\" + finalCateg)\n    console.log(\"response is: \")\n    console.log(response)\n\n\n    const allData = await response.json()\n    console.log(\"All Data: \")\n    console.log(allData)\n\n\n    this.setState({ questionsArr: allData })\n    this.setState({ currentQ: allData[this.state.questionIndex].text })\n    this.setState({ currentAnswers: allData[this.state.questionIndex].answers })\n    console.log(\"The State:\")\n    console.log(this.state)\n  }\n\n  nextQuestion(isCorrect){\n    console.log(\"Callback answered: \" +isCorrect);\n    \n    const score = isCorrect? this.state.currentScore+1: this.state.currentScore\n    const nextQIndex = this.state.questionIndex++\n\n    console.log();\n    \n\n    this.setState({currentScore: score})\n    this.setState({questionIndex: nextQIndex})\n    console.log(\"Finished setting state\")\n    console.log(this.state.questionIndex)\n    \n    \n  }\n\n\n\n\n  render() {\n    \n    return(\n    <Grid\n      container\n      direction=\"column\"\n      justify=\"center\"\n      alignItems=\"center\"\n    >\n      <p>{this.state.questionsArr && this.state.questionsArr[this.state.questionIndex].text}</p>\n      <AnswersComponent answers={this.state.questionsArr && this.state.questionsArr[this.state.questionIndex].answers} callback={this.nextQuestion}></AnswersComponent></Grid> )\n  }\n\n}\nexport default QuestionsComponent;\n\n\n\n// import React, { Component } from 'react';\n// import Button from '@material-ui/core/Button'\n// import Grid from '@material-ui/core/Grid';\n\n// class QuestionsComponent extends Component {\n\n//   constructor(props) {\n//     super(props);\n//     this.state = { questionsArr: [] };\n\n//     this.onGetQuestions = this.onGetQuestions.bind(this);\n//     this.onClickAnswer = this.onClickAnswer.bind(this);\n//   }\n\n\n//   async onGetQuestions(category) {\n//     const finalCateg = category == null ? category : \"entertainment-music\";\n\n//     console.log(\"Starting out\");\n\n\n//     //fetch questions\n//     //https://cocktail-trivia-api.herokuapp.com/api/category/entertainment-music\n//     // const response = await fetch(\"https://cocktail-trivia-api.herokuapp.com/api/category/\" + finalCateg)\n//     // const allData = await response.json()\n//     const allData = []\n//     this.setState({ questionsArr: allData })\n//     this.setState({ currentQ: allData[0].text })\n//     this.setState({ currentAnswers: allData[0].answers })\n\n\n\n//     console.log(\"Got the data:\")\n//     console.log(allData)\n\n\n\n\n\n//   }\n\n//   onClickAnswer() {\n\n//   }\n\n//   async render() {\n//    // await this.onGetQuestions()\n\n//     // <AnswersComponent answers={this.state.currentAnswers}></AnswersComponent>\n//     return  <p>First Question</p>\n//   }\n// }\n// export default QuestionsComponent;\n"]},"metadata":{},"sourceType":"module"}
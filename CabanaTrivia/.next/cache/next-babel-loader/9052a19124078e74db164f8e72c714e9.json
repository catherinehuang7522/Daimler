{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/paulinaanzaldo/Daimler/CabanaTrivia/pages/components/Categories.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport DangerButton from './DangerButton';\nimport CategoriesButton from './CategoriesButton';\nimport Grid from '@material-ui/core/Grid';\nimport { styles } from '../stylesheet.js';\nimport { IconButton } from '@material-ui/core';\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\nimport { CATEGORIES_MAP } from '../constants';\n/* shown when user first starts playing - they can choose what type of game they want to play\ninitializes the state\n*/\n\nvar CategoriesComponent = /*#__PURE__*/function (_Component) {\n  _inherits(CategoriesComponent, _Component);\n\n  function CategoriesComponent(props) {\n    var _this;\n\n    _classCallCheck(this, CategoriesComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CategoriesComponent).call(this, props));\n    _this.state = {\n      //IDEA\n      count: 0,\n      // categoriesDict: {\n      //   music: false,\n      //   musicAndTheatre: false,\n      //   tv: false,\n      //   boardGames: false,\n      //   nature: false,\n      //   math: false,\n      //   geography: false,\n      //   history: false,\n      //   celebrities: false,\n      //   vehicles: false\n      // },\n      emptyDic: [],\n      //PREVIOUSLY:\n      generalKnowledge: false,\n      film: false,\n      scienceNature: false,\n      sports: false,\n      history: false,\n      tv: false,\n      books: false,\n      music: false,\n      mythology: false,\n      geography: false,\n      art: false,\n      videoGames: false\n    }; // this.onClickGeneralKnowledge = this.onClickGeneralKnowledge.bind(this);\n    // this.onClickFilm = this.onClickFilm.bind(this);\n    // this.onClickScienceNature = this.onClickScienceNature.bind(this);\n    // this.onClickSports = this.onClickSports.bind(this);\n    // this.onClickHistory = this.onClickHistory.bind(this);\n    // this.onClickTV = this.onClickTV.bind(this);\n    // this.onClickBooks = this.onClickBooks.bind(this);\n\n    _this.onClickMusic = _this.onClickMusic.bind(_assertThisInitialized(_this)); // this.onClickMythology = this.onClickMythology.bind(this);\n    // this.onClickGeography = this.onClickGeography.bind(this);\n    // this.onClickArt = this.onClickArt.bind(this);\n    // this.onClickVideoGames = this.onClickVideoGames.bind(this);\n\n    _this.incrementCount = _this.incrementCount.bind(_assertThisInitialized(_this));\n    _this.decrementCount = _this.decrementCount.bind(_assertThisInitialized(_this));\n    _this.onClickShowDifficultyScreen = _this.onClickShowDifficultyScreen.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CategoriesComponent, [{\n    key: \"onClickShowDifficultyScreen\",\n    value: function onClickShowDifficultyScreen() {\n      this.props.callback(\"DIFFICULTY\");\n    } // onClickGeneralKnowledge() {\n    //   this.setState({generalKnowledge: !this.state.generalKnowledge});\n    //   !this.state.generalKnowledge ? this.incrementCount() : this.decrementCount();\n    //\n    // }\n    //\n    // onClickFilm() {\n    //   this.setState({film: !this.state.film});\n    //   !this.state.film ? this.incrementCount() : this.decrementCount();\n    // }\n    //\n    // onClickScienceNature() {\n    //   this.setState({scienceNature: !this.state.scienceNature});\n    //   !this.state.scienceNature ? this.incrementCount() : this.decrementCount();\n    //\n    // }\n    //\n    // onClickSports() {\n    //   this.setState({sports: !this.state.sports});\n    //   !this.state.sports ? this.incrementCount() : this.decrementCount();\n    // }\n    //\n    // onClickHistory() {\n    //   this.setState({history: !this.state.history});\n    //   !this.state.history ? this.incrementCount() : this.decrementCount();\n    // }\n    //\n    // onClickTV() {\n    //   this.setState({tv: !this.state.tv});\n    //   !this.state.tv ? this.incrementCount() : this.decrementCount();\n    //\n    // }\n    //\n    // onClickBooks() {\n    //   this.setState({books: !this.state.books});\n    //   !this.state.books ? this.incrementCount() : this.decrementCount();\n    // }\n\n  }, {\n    key: \"onClickMusic\",\n    value: function onClickMusic() {\n      this.setState({\n        music: !this.state.music\n      });\n      !this.state.music ? this.incrementCount(\"MUSIC\") : this.decrementCount(this.state.emptyDic.length - 1);\n    } // onClickMythology() {\n    //   this.setState({mythology: !this.state.mythology});\n    //   !this.state.music ? this.incrementCount() : this.decrementCount();\n    //\n    // }\n    //\n    // onClickGeography() {\n    //   this.setState({geography: !this.state.geography});\n    //   !this.state.geography ? this.incrementCount() : this.decrementCount();\n    //\n    // }\n    //\n    // onClickArt() {\n    //   this.setState({art: !this.state.art});\n    //   !this.state.art ? this.incrementCount() : this.decrementCount();\n    //\n    // }\n    //\n    // onClickVideoGames() {\n    //   this.setState({videoGames: !this.state.videoGames});\n    //   !this.state.videoGames ? this.incrementCount() : this.decrementCount();\n    //\n    // }\n\n  }, {\n    key: \"incrementCount\",\n    value: function incrementCount(catName) {\n      this.setState({\n        count: this.state.count + 1\n      });\n      var input = this.state.emptyDic.concat(catName);\n      this.setState({\n        emptyDic: input\n      }); //HERE ADD TO EMPTY DID:\n    }\n  }, {\n    key: \"decrementCount\",\n    value: function decrementCount(index) {\n      this.setState({\n        count: this.state.count - 1\n      });\n      var currArray = this.state.emptyDic;\n      var val = currArray.indexOf(index);\n      var removeInput = this.state.emptyDic.splice(val, 1);\n      this.setState({\n        emptyDic: removeInput\n      }); //HERE REMOVE TO DIC\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //By default, our categoty buttons are all unselected. When selected, the button looks selected\n      //Prints current number of categories selected\n      var currentCount = this.state.count;\n      var myEmptyArray = this.state.emptyDic;\n      console.log(currentCount);\n      console.log(myEmptyArray); //Checks if user has selected at least one category\n\n      if (currentCount == 1 || currentCount == 2 || currentCount == 3) {\n        console.log(\"Ready to start!\");\n      } else {\n        console.log(\"Select 3 categories or less\");\n      }\n\n      var generalKnowledgeButton = this.state.generalKnowledge ? __jsx(DangerButton, {\n        text: \"General Knowledge\",\n        onClick: this.onClickGeneralKnowledge,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }) : __jsx(CategoriesButton, {\n        text: \"General Knowledge\",\n        onClick: this.onClickGeneralKnowledge,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      });\n      var filmButton = this.state.film ? __jsx(DangerButton, {\n        text: \"Film\",\n        onClick: this.onClickFilm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }) : __jsx(CategoriesButton, {\n        text: \"Film\",\n        onClick: this.onClickFilm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      });\n      var scienceNatureButton = this.state.scienceNature ? __jsx(DangerButton, {\n        text: \"Science and Nature\",\n        onClick: this.onClickScienceNature,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }) : __jsx(CategoriesButton, {\n        text: \"Science and Nature\",\n        onClick: this.onClickScienceNature,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      });\n      var sportsButton = this.state.sports ? __jsx(DangerButton, {\n        text: \"Sports\",\n        onClick: this.onClickSports,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }) : __jsx(CategoriesButton, {\n        text: \"Sports\",\n        onClick: this.onClickSports,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      });\n      var historyButton = this.state.history ? __jsx(DangerButton, {\n        text: \"History\",\n        onClick: this.onClickHistory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }) : __jsx(CategoriesButton, {\n        text: \"History\",\n        onClick: this.onClickHistory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      });\n      var tvButton = this.state.tv ? __jsx(DangerButton, {\n        text: \"Television\",\n        onClick: this.onClickTV,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }) : __jsx(CategoriesButton, {\n        text: \"Television\",\n        onClick: this.onClickTV,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      });\n      var booksButton = this.state.books ? __jsx(DangerButton, {\n        text: \"Books\",\n        onClick: this.onClickBooks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }) : __jsx(CategoriesButton, {\n        text: \"Books\",\n        onClick: this.onClickBooks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      });\n      var musicButton = this.state.music ? __jsx(DangerButton, {\n        text: \"Music\",\n        onClick: this.onClickMusic,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }) : __jsx(CategoriesButton, {\n        text: \"Music\",\n        onClick: this.onClickMusic,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      });\n      var mythologyButton = this.state.mythology ? __jsx(DangerButton, {\n        text: \"Mythology\",\n        onClick: this.onClickMythology,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }) : __jsx(CategoriesButton, {\n        text: \"Mythology\",\n        onClick: this.onClickMythology,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      });\n      var geographyButton = this.state.geography ? __jsx(DangerButton, {\n        text: \"Geography\",\n        onClick: this.onClickGeography,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }) : __jsx(CategoriesButton, {\n        text: \"Geography\",\n        onClick: this.onClickGeography,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      });\n      var artButton = this.state.art ? __jsx(DangerButton, {\n        text: \"Art\",\n        onClick: this.onClickArt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }) : __jsx(CategoriesButton, {\n        text: \"Art\",\n        onClick: this.onClickArt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      });\n      var videoGamesButton = this.state.videoGames ? __jsx(DangerButton, {\n        text: \"Video Games\",\n        onClick: this.onClickVideoGames,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }) : __jsx(CategoriesButton, {\n        text: \"Video Games\",\n        onClick: this.onClickVideoGames,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }); // TODO: Add arrow button that would mean \"Next\".\n      // TODO: Limit selection to three categories.\n      // TODO: Keep track of which categories were selected for future API calls\n\n      return __jsx(\"div\", {\n        style: styles.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, __jsx(Grid, {\n        style: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \" SELECT UP TO 3 CATEGORIES \"), __jsx(\"div\", {\n        style: styles.categoryButtonsContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, __jsx(Grid, {\n        style: styles.categoryRow,\n        spacing: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, generalKnowledgeButton, filmButton), __jsx(Grid, {\n        style: styles.categoryRow,\n        spacing: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, scienceNatureButton, sportsButton), __jsx(Grid, {\n        style: styles.categoryRow,\n        spacing: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, historyButton, tvButton), __jsx(Grid, {\n        style: styles.categoryRow,\n        spacing: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, booksButton, musicButton), __jsx(Grid, {\n        style: styles.categoryRow,\n        spacing: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, mythologyButton, geographyButton), __jsx(Grid, {\n        style: styles.categoryRow,\n        spacing: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, artButton, videoGamesButton)), __jsx(IconButton, {\n        style: styles.nextButton,\n        onClick: this.onClickShowDifficultyScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, __jsx(DoubleArrowIcon, {\n        fontSize: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return CategoriesComponent;\n}(Component);\n\nexport default CategoriesComponent;","map":{"version":3,"sources":["/Users/paulinaanzaldo/Daimler/CabanaTrivia/pages/components/Categories.js"],"names":["React","Component","Button","DangerButton","CategoriesButton","Grid","styles","IconButton","DoubleArrowIcon","CATEGORIES_MAP","CategoriesComponent","props","state","count","emptyDic","generalKnowledge","film","scienceNature","sports","history","tv","books","music","mythology","geography","art","videoGames","onClickMusic","bind","incrementCount","decrementCount","onClickShowDifficultyScreen","callback","setState","length","catName","input","concat","index","currArray","val","indexOf","removeInput","splice","currentCount","myEmptyArray","console","log","generalKnowledgeButton","onClickGeneralKnowledge","filmButton","onClickFilm","scienceNatureButton","onClickScienceNature","sportsButton","onClickSports","historyButton","onClickHistory","tvButton","onClickTV","booksButton","onClickBooks","musicButton","mythologyButton","onClickMythology","geographyButton","onClickGeography","artButton","onClickArt","videoGamesButton","onClickVideoGames","root","title","categoryButtonsContainer","categoryRow","nextButton"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button'\nimport DangerButton from './DangerButton'\nimport CategoriesButton from './CategoriesButton'\nimport Grid from '@material-ui/core/Grid'\nimport { styles } from '../stylesheet.js'\nimport { IconButton } from '@material-ui/core';\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\nimport {CATEGORIES_MAP} from '../constants'\n\n\n/* shown when user first starts playing - they can choose what type of game they want to play\ninitializes the state\n*/\nclass CategoriesComponent extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      //IDEA\n      count: 0,\n      // categoriesDict: {\n      //   music: false,\n      //   musicAndTheatre: false,\n      //   tv: false,\n      //   boardGames: false,\n      //   nature: false,\n      //   math: false,\n      //   geography: false,\n      //   history: false,\n      //   celebrities: false,\n      //   vehicles: false\n      // },\n      emptyDic:[],\n\n      //PREVIOUSLY:\n      generalKnowledge: false,\n      film: false,\n      scienceNature: false,\n      sports: false,\n      history: false,\n      tv: false,\n      books: false,\n      music: false,\n      mythology: false,\n      geography: false,\n      art: false,\n      videoGames: false,\n    };\n\n    // this.onClickGeneralKnowledge = this.onClickGeneralKnowledge.bind(this);\n    // this.onClickFilm = this.onClickFilm.bind(this);\n    // this.onClickScienceNature = this.onClickScienceNature.bind(this);\n    // this.onClickSports = this.onClickSports.bind(this);\n    // this.onClickHistory = this.onClickHistory.bind(this);\n    // this.onClickTV = this.onClickTV.bind(this);\n    // this.onClickBooks = this.onClickBooks.bind(this);\n    this.onClickMusic = this.onClickMusic.bind(this);\n    // this.onClickMythology = this.onClickMythology.bind(this);\n    // this.onClickGeography = this.onClickGeography.bind(this);\n    // this.onClickArt = this.onClickArt.bind(this);\n    // this.onClickVideoGames = this.onClickVideoGames.bind(this);\n    this.incrementCount = this.incrementCount.bind(this);\n    this.decrementCount = this.decrementCount.bind(this);\n    this.onClickShowDifficultyScreen = this.onClickShowDifficultyScreen.bind(this)\n  }\n\n  onClickShowDifficultyScreen() {\n    this.props.callback(\"DIFFICULTY\")\n  }\n\n  // onClickGeneralKnowledge() {\n  //   this.setState({generalKnowledge: !this.state.generalKnowledge});\n  //   !this.state.generalKnowledge ? this.incrementCount() : this.decrementCount();\n  //\n  // }\n  //\n  // onClickFilm() {\n  //   this.setState({film: !this.state.film});\n  //   !this.state.film ? this.incrementCount() : this.decrementCount();\n  // }\n  //\n  // onClickScienceNature() {\n  //   this.setState({scienceNature: !this.state.scienceNature});\n  //   !this.state.scienceNature ? this.incrementCount() : this.decrementCount();\n  //\n  // }\n  //\n  // onClickSports() {\n  //   this.setState({sports: !this.state.sports});\n  //   !this.state.sports ? this.incrementCount() : this.decrementCount();\n  // }\n  //\n  // onClickHistory() {\n  //   this.setState({history: !this.state.history});\n  //   !this.state.history ? this.incrementCount() : this.decrementCount();\n  // }\n  //\n  // onClickTV() {\n  //   this.setState({tv: !this.state.tv});\n  //   !this.state.tv ? this.incrementCount() : this.decrementCount();\n  //\n  // }\n  //\n  // onClickBooks() {\n  //   this.setState({books: !this.state.books});\n  //   !this.state.books ? this.incrementCount() : this.decrementCount();\n  // }\n\n  onClickMusic() {\n    this.setState({music: !this.state.music});\n    !this.state.music ? this.incrementCount(\"MUSIC\") : this.decrementCount((this.state.emptyDic.length - 1));\n  }\n\n  // onClickMythology() {\n  //   this.setState({mythology: !this.state.mythology});\n  //   !this.state.music ? this.incrementCount() : this.decrementCount();\n  //\n  // }\n  //\n  // onClickGeography() {\n  //   this.setState({geography: !this.state.geography});\n  //   !this.state.geography ? this.incrementCount() : this.decrementCount();\n  //\n  // }\n  //\n  // onClickArt() {\n  //   this.setState({art: !this.state.art});\n  //   !this.state.art ? this.incrementCount() : this.decrementCount();\n  //\n  // }\n  //\n  // onClickVideoGames() {\n  //   this.setState({videoGames: !this.state.videoGames});\n  //   !this.state.videoGames ? this.incrementCount() : this.decrementCount();\n  //\n  // }\n\n  incrementCount(catName){\n    this.setState({ count: this.state.count + 1 })\n\n    var input = this.state.emptyDic.concat(catName)\n    this.setState({emptyDic : input })\n    //HERE ADD TO EMPTY DID:\n\n  }\n\n  decrementCount(index){\n    this.setState({ count: this.state.count - 1 })\n\n    var currArray = this.state.emptyDic\n    var val = currArray.indexOf(index)\n    var removeInput = this.state.emptyDic.splice(val, 1)\n    this.setState({emptyDic : removeInput })\n\n\n    //HERE REMOVE TO DIC\n  }\n\n  render() {\n    //By default, our categoty buttons are all unselected. When selected, the button looks selected\n\n    //Prints current number of categories selected\n    const currentCount = this.state.count\n    const myEmptyArray = this.state.emptyDic\n\n    console.log(currentCount)\n    console.log(myEmptyArray)\n\n    //Checks if user has selected at least one category\n    if (currentCount == 1 || currentCount == 2 || currentCount == 3) {console.log(\"Ready to start!\")}\n    else {console.log(\"Select 3 categories or less\")}\n\n    const generalKnowledgeButton = this.state.generalKnowledge ?\n      <DangerButton text=\"General Knowledge\" onClick={this.onClickGeneralKnowledge}/>\n      :\n      <CategoriesButton text=\"General Knowledge\" onClick={this.onClickGeneralKnowledge} />\n\n    const filmButton = this.state.film ?\n      <DangerButton text=\"Film\" onClick={this.onClickFilm}/>\n      :\n      <CategoriesButton text=\"Film\" onClick={this.onClickFilm} />\n\n    const scienceNatureButton = this.state.scienceNature ?\n      <DangerButton text=\"Science and Nature\" onClick={this.onClickScienceNature}/>\n      :\n      <CategoriesButton text=\"Science and Nature\" onClick={this.onClickScienceNature} />\n\n    const sportsButton = this.state.sports ?\n      <DangerButton text=\"Sports\" onClick={this.onClickSports}/>\n      :\n      <CategoriesButton text=\"Sports\" onClick={this.onClickSports} />\n\n    const historyButton = this.state.history ?\n      <DangerButton text=\"History\" onClick={this.onClickHistory}/>\n      :\n      <CategoriesButton text=\"History\" onClick={this.onClickHistory} />\n\n    const tvButton = this.state.tv ?\n      <DangerButton text=\"Television\" onClick={this.onClickTV}/>\n      :\n      <CategoriesButton text=\"Television\" onClick={this.onClickTV} />\n\n    const booksButton = this.state.books ?\n      <DangerButton text=\"Books\" onClick={this.onClickBooks}/>\n      :\n      <CategoriesButton text=\"Books\" onClick={this.onClickBooks} />\n\n    const musicButton = this.state.music ?\n      <DangerButton text=\"Music\" onClick={this.onClickMusic}/>\n      :\n      <CategoriesButton text=\"Music\" onClick={this.onClickMusic} />\n\n    const mythologyButton = this.state.mythology ?\n      <DangerButton text=\"Mythology\" onClick={this.onClickMythology}/>\n      :\n      <CategoriesButton text=\"Mythology\" onClick={this.onClickMythology} />\n\n    const geographyButton = this.state.geography ?\n      <DangerButton text=\"Geography\" onClick={this.onClickGeography}/>\n      :\n      <CategoriesButton text=\"Geography\" onClick={this.onClickGeography} />\n\n    const artButton = this.state.art ?\n      <DangerButton text=\"Art\" onClick={this.onClickArt}/>\n      :\n      <CategoriesButton text=\"Art\" onClick={this.onClickArt} />\n\n    const videoGamesButton = this.state.videoGames ?\n      <DangerButton text=\"Video Games\" onClick={this.onClickVideoGames}/>\n      :\n      <CategoriesButton text=\"Video Games\" onClick={this.onClickVideoGames} />\n\n      // TODO: Add arrow button that would mean \"Next\".\n      // TODO: Limit selection to three categories.\n      // TODO: Keep track of which categories were selected for future API calls\n    return (\n      <div style={styles.root}>\n        <Grid style={styles.title}> SELECT UP TO 3 CATEGORIES </Grid>\n        <div style={styles.categoryButtonsContainer}>\n          <Grid style={styles.categoryRow} spacing={3}>\n            {generalKnowledgeButton}\n            {filmButton}\n          </Grid>\n          <Grid style={styles.categoryRow} spacing={3}>\n            {scienceNatureButton}\n            {sportsButton}\n          </Grid>\n          <Grid style={styles.categoryRow} spacing={3}>\n            {historyButton}\n            {tvButton}\n          </Grid>\n          <Grid style={styles.categoryRow} spacing={3}>\n            {booksButton}\n            {musicButton}\n          </Grid>\n          <Grid style={styles.categoryRow} spacing={3}>\n            {mythologyButton}\n            {geographyButton}\n          </Grid>\n          <Grid style={styles.categoryRow} spacing={3}>\n            {artButton}\n            {videoGamesButton}\n          </Grid>\n        </div>\n        <IconButton style={styles.nextButton} onClick={this.onClickShowDifficultyScreen}>\n          <DoubleArrowIcon fontSize=\"large\"/>\n        </IconButton>\n      </div>\n    );\n  }\n\n}\nexport default CategoriesComponent;\n"]},"metadata":{},"sourceType":"module"}
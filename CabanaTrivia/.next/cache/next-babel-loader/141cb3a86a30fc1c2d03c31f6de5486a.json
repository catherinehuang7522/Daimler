{"ast":null,"code":"var _jsxFileName = \"/Users/ken/Documents/Daimler/CabanaTrivia/pages/components/Questions.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport DangerButton from './DangerButton';\nimport Grid from '@material-ui/core/Grid';\nimport AnswersComponent from './Answers';\nconst styles = {\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column'\n  },\n  root: {\n    flexGrow: 1\n  }\n};\n\nclass QuestionsComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startGame: true,\n      singlePlayer: true,\n      duration: 1\n    };\n  }\n\n  async onGetQuestions(category) {\n    const finalCateg = category == null ? \"entertainment-music\" : category;\n    console.log(\"Starting out\"); //fetch questions\n    //https://cocktail-trivia-api.herokuapp.com/api/category/entertainment-music\n\n    const response = await fetch(\"https://cocktail-trivia-api.herokuapp.com/api/category/\" + finalCateg);\n    console.log(\"response is: \");\n    console.log(response);\n    const allData = await response.json();\n    console.log(\"All Data: \");\n    console.log(allData);\n    this.setState({\n      questionsArr: allData\n    });\n    this.setState({\n      currentQ: allData[0].text\n    });\n    this.setState({\n      currentAnswers: allData[0].answers\n    });\n    console.log(\"Got the data:\");\n    console.log(allData);\n  }\n\n  render() {\n    this.onGetQuestions();\n    return __jsx(Grid, {\n      container: true,\n      direction: \"column\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.props.c), __jsx(AnswersComponent, {\n      answers: this.state.currentAnswers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default QuestionsComponent; // import React, { Component } from 'react';\n// import Button from '@material-ui/core/Button'\n// import Grid from '@material-ui/core/Grid';\n// class QuestionsComponent extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { questionsArr: [] };\n//     this.onGetQuestions = this.onGetQuestions.bind(this);\n//     this.onClickAnswer = this.onClickAnswer.bind(this);\n//   }\n//   async onGetQuestions(category) {\n//     const finalCateg = category == null ? category : \"entertainment-music\";\n//     console.log(\"Starting out\");\n//     //fetch questions\n//     //https://cocktail-trivia-api.herokuapp.com/api/category/entertainment-music\n//     // const response = await fetch(\"https://cocktail-trivia-api.herokuapp.com/api/category/\" + finalCateg)\n//     // const allData = await response.json()\n//     const allData = []\n//     this.setState({ questionsArr: allData })\n//     this.setState({ currentQ: allData[0].text })\n//     this.setState({ currentAnswers: allData[0].answers })\n//     console.log(\"Got the data:\")\n//     console.log(allData)\n//   }\n//   onClickAnswer() {\n//   }\n//   async render() {\n//    // await this.onGetQuestions()\n//     // <AnswersComponent answers={this.state.currentAnswers}></AnswersComponent>\n//     return  <p>First Question</p>\n//   }\n// }\n// export default QuestionsComponent;","map":{"version":3,"sources":["/Users/ken/Documents/Daimler/CabanaTrivia/pages/components/Questions.js"],"names":["React","Component","Button","DangerButton","Grid","AnswersComponent","styles","container","display","justifyContent","alignItems","flexDirection","root","flexGrow","QuestionsComponent","constructor","props","state","startGame","singlePlayer","duration","onGetQuestions","category","finalCateg","console","log","response","fetch","allData","json","setState","questionsArr","currentQ","text","currentAnswers","answers","render","c"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,gBAAP,MAA6B,WAA7B;AAGA,MAAMC,MAAM,GAAI;AACdC,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,aAAa,EAAE;AAJN,GADG;AAOdC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN;AAPQ,CAAhB;;AAYA,MAAMC,kBAAN,SAAiCb,SAAjC,CAA2C;AAEzCc,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,IADA;AAEXC,MAAAA,YAAY,EAAE,IAFH;AAGXC,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAOD;;AAED,QAAMC,cAAN,CAAqBC,QAArB,EAA+B;AAC7B,UAAMC,UAAU,GAAGD,QAAQ,IAAI,IAAZ,GAAmB,qBAAnB,GAA2CA,QAA9D;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAH6B,CAI7B;AACA;;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4DAA4DJ,UAA7D,CAA5B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AAGA,UAAME,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAtB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYG,OAAZ;AAGA,SAAKE,QAAL,CAAc;AAAEC,MAAAA,YAAY,EAAEH;AAAhB,KAAd;AACA,SAAKE,QAAL,CAAc;AAAEE,MAAAA,QAAQ,EAAEJ,OAAO,CAAC,CAAD,CAAP,CAAWK;AAAvB,KAAd;AACA,SAAKH,QAAL,CAAc;AAAEI,MAAAA,cAAc,EAAEN,OAAO,CAAC,CAAD,CAAP,CAAWO;AAA7B,KAAd;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYG,OAAZ;AACD;;AAMDQ,EAAAA,MAAM,GAAG;AACP,SAAKf,cAAL;AACA,WACA,MAAC,IAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,SAAS,EAAC,QAFZ;AAGE,MAAA,OAAO,EAAC,QAHV;AAIE,MAAA,UAAU,EAAC,QAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKL,KAAL,CAAWqB,CAAf,CANF,EAOE,MAAC,gBAAD;AAAkB,MAAA,OAAO,EAAE,KAAKpB,KAAL,CAAWiB,cAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADA;AASD;;AApDwC;;AAuD3C,eAAepB,kBAAf,C,CAIA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAMA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button'\nimport DangerButton from './DangerButton'\nimport Grid from '@material-ui/core/Grid'\nimport AnswersComponent from './Answers'\n\n\nconst styles = ({\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column'\n  },\n  root: {\n    flexGrow: 1\n  }\n})\n\nclass QuestionsComponent extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      startGame: true,\n      singlePlayer: true,\n      duration: 1\n    };\n\n\n  }\n\n  async onGetQuestions(category) {\n    const finalCateg = category == null ? \"entertainment-music\" : category\n\n    console.log(\"Starting out\");\n    //fetch questions\n    //https://cocktail-trivia-api.herokuapp.com/api/category/entertainment-music\n    const response = await fetch(\"https://cocktail-trivia-api.herokuapp.com/api/category/\" + finalCateg)\n    console.log(\"response is: \");\n    console.log(response);\n\n\n    const allData = await response.json()\n    console.log(\"All Data: \");\n    console.log(allData);\n\n\n    this.setState({ questionsArr: allData })\n    this.setState({ currentQ: allData[0].text })\n    this.setState({ currentAnswers: allData[0].answers })\n    console.log(\"Got the data:\")\n    console.log(allData)\n  }\n\n\n\n\n\n  render() {\n    this.onGetQuestions()\n    return(\n    <Grid\n      container\n      direction=\"column\"\n      justify=\"center\"\n      alignItems=\"center\"\n    >\n      <p>{this.props.c}</p>\n      <AnswersComponent answers={this.state.currentAnswers}></AnswersComponent></Grid> )\n  }\n\n}\nexport default QuestionsComponent;\n\n\n\n// import React, { Component } from 'react';\n// import Button from '@material-ui/core/Button'\n// import Grid from '@material-ui/core/Grid';\n\n// class QuestionsComponent extends Component {\n\n//   constructor(props) {\n//     super(props);\n//     this.state = { questionsArr: [] };\n\n//     this.onGetQuestions = this.onGetQuestions.bind(this);\n//     this.onClickAnswer = this.onClickAnswer.bind(this);\n//   }\n\n\n//   async onGetQuestions(category) {\n//     const finalCateg = category == null ? category : \"entertainment-music\";\n\n//     console.log(\"Starting out\");\n\n\n//     //fetch questions\n//     //https://cocktail-trivia-api.herokuapp.com/api/category/entertainment-music\n//     // const response = await fetch(\"https://cocktail-trivia-api.herokuapp.com/api/category/\" + finalCateg)\n//     // const allData = await response.json()\n//     const allData = []\n//     this.setState({ questionsArr: allData })\n//     this.setState({ currentQ: allData[0].text })\n//     this.setState({ currentAnswers: allData[0].answers })\n\n\n\n//     console.log(\"Got the data:\")\n//     console.log(allData)\n\n\n\n\n\n//   }\n\n//   onClickAnswer() {\n\n//   }\n\n//   async render() {\n//    // await this.onGetQuestions()\n\n//     // <AnswersComponent answers={this.state.currentAnswers}></AnswersComponent>\n//     return  <p>First Question</p>\n//   }\n// }\n// export default QuestionsComponent;\n"]},"metadata":{},"sourceType":"module"}
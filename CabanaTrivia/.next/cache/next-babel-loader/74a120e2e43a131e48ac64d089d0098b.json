{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/paulinaanzaldo/Daimler/CabanaTrivia/pages/components/Categories.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport DangerButton from './DangerButton';\nimport CategoriesButton from './CategoriesButton';\nimport Grid from '@material-ui/core/Grid';\nimport { styles } from '../stylesheet.js';\nimport { IconButton } from '@material-ui/core';\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\nimport { CATEGORIES_MAP } from '../constants';\n/* shown when user first starts playing - they can choose what type of game they want to play\ninitializes the state\n*/\n\nvar CategoriesComponent = /*#__PURE__*/function (_Component) {\n  _inherits(CategoriesComponent, _Component);\n\n  var _super = _createSuper(CategoriesComponent);\n\n  function CategoriesComponent(props) {\n    var _this;\n\n    _classCallCheck(this, CategoriesComponent);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      count: 0,\n      categoriesChosen: [],\n      //PREVIOUSLY:\n      generalKnowledge: false,\n      film: false,\n      scienceNature: false,\n      sports: false,\n      history: false,\n      tv: false,\n      books: false,\n      music: false,\n      mythology: false,\n      geography: false,\n      art: false,\n      videoGames: false\n    };\n    _this.onClickGeneralKnowledge = _this.onClickGeneralKnowledge.bind(_assertThisInitialized(_this));\n    _this.onClickFilm = _this.onClickFilm.bind(_assertThisInitialized(_this));\n    _this.onClickScienceNature = _this.onClickScienceNature.bind(_assertThisInitialized(_this));\n    _this.onClickSports = _this.onClickSports.bind(_assertThisInitialized(_this));\n    _this.onClickHistory = _this.onClickHistory.bind(_assertThisInitialized(_this));\n    _this.onClickTV = _this.onClickTV.bind(_assertThisInitialized(_this));\n    _this.onClickBooks = _this.onClickBooks.bind(_assertThisInitialized(_this));\n    _this.onClickMusic = _this.onClickMusic.bind(_assertThisInitialized(_this));\n    _this.onClickMythology = _this.onClickMythology.bind(_assertThisInitialized(_this));\n    _this.onClickGeography = _this.onClickGeography.bind(_assertThisInitialized(_this));\n    _this.onClickArt = _this.onClickArt.bind(_assertThisInitialized(_this));\n    _this.onClickVideoGames = _this.onClickVideoGames.bind(_assertThisInitialized(_this));\n    _this.incrementCount = _this.incrementCount.bind(_assertThisInitialized(_this));\n    _this.decrementCount = _this.decrementCount.bind(_assertThisInitialized(_this));\n    _this.onClickShowDifficultyScreen = _this.onClickShowDifficultyScreen.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CategoriesComponent, [{\n    key: \"onClickShowDifficultyScreen\",\n    value: function onClickShowDifficultyScreen() {\n      //Checks if user has selected at least one category\n      var currentCount = this.state.count;\n\n      if (currentCount == 1 || currentCount == 2 || currentCount == 3) {\n        this.props.callback(\"DIFFICULTY\", this.state.categoriesChosen);\n        console.log(\"Ready to start\");\n      } else {\n        console.log(\"Select 3 categories or less\");\n      }\n    }\n  }, {\n    key: \"onClickGeneralKnowledge\",\n    value: function onClickGeneralKnowledge() {\n      this.setState({\n        generalKnowledge: !this.state.generalKnowledge\n      });\n      !this.state.generalKnowledge ? this.incrementCount(\"GENERAL_KNOWLEDGE\") : this.decrementCount(\"GENERAL_KNOWLEDGE\");\n    }\n  }, {\n    key: \"onClickFilm\",\n    value: function onClickFilm() {\n      this.setState({\n        film: !this.state.film\n      });\n      !this.state.film ? this.incrementCount(\"FILM\") : this.decrementCount(\"FILM\");\n    }\n  }, {\n    key: \"onClickScienceNature\",\n    value: function onClickScienceNature() {\n      this.setState({\n        scienceNature: !this.state.scienceNature\n      });\n      !this.state.scienceNature ? this.incrementCount(\"SCIENCE_NATURE\") : this.decrementCount(\"SCIENCE_NATURE\");\n    }\n  }, {\n    key: \"onClickSports\",\n    value: function onClickSports() {\n      this.setState({\n        sports: !this.state.sports\n      });\n      !this.state.sports ? this.incrementCount(\"SPORTS\") : this.decrementCount(\"SPORTS\");\n    }\n  }, {\n    key: \"onClickHistory\",\n    value: function onClickHistory() {\n      this.setState({\n        history: !this.state.history\n      });\n      !this.state.history ? this.incrementCount(\"HISTORY\") : this.decrementCount(\"HISTORY\");\n    }\n  }, {\n    key: \"onClickTV\",\n    value: function onClickTV() {\n      this.setState({\n        tv: !this.state.tv\n      });\n      !this.state.tv ? this.incrementCount(\"TELEVISION\") : this.decrementCount(\"TELEVISION\");\n    }\n  }, {\n    key: \"onClickBooks\",\n    value: function onClickBooks() {\n      this.setState({\n        books: !this.state.books\n      });\n      !this.state.books ? this.incrementCount(\"BOOKS\") : this.decrementCount(\"BOOKS\");\n    }\n  }, {\n    key: \"onClickMusic\",\n    value: function onClickMusic() {\n      this.setState({\n        music: !this.state.music\n      });\n      !this.state.music ? this.incrementCount(\"MUSIC\") : this.decrementCount(\"MUSIC\");\n    }\n  }, {\n    key: \"onClickMythology\",\n    value: function onClickMythology() {\n      this.setState({\n        mythology: !this.state.mythology\n      });\n      !this.state.music ? this.incrementCount(\"MYTHOLOGY\") : this.decrementCount(\"MYTHOLOGY\");\n    }\n  }, {\n    key: \"onClickGeography\",\n    value: function onClickGeography() {\n      this.setState({\n        geography: !this.state.geography\n      });\n      !this.state.geography ? this.incrementCount(\"GEOGRAPHY\") : this.decrementCount(\"GEOGRAPHY\");\n    }\n  }, {\n    key: \"onClickArt\",\n    value: function onClickArt() {\n      this.setState({\n        art: !this.state.art\n      });\n      !this.state.art ? this.incrementCount(\"ART\") : this.decrementCount(\"ART\");\n    }\n  }, {\n    key: \"onClickVideoGames\",\n    value: function onClickVideoGames() {\n      this.setState({\n        videoGames: !this.state.videoGames\n      });\n      !this.state.videoGames ? this.incrementCount(\"VIDEO_GAMES\") : this.decrementCount(\"VIDEO_GAMES\");\n    }\n  }, {\n    key: \"incrementCount\",\n    value: function incrementCount(catName) {\n      this.setState({\n        count: this.state.count + 1\n      }); //Add category to array\n\n      var input = this.state.categoriesChosen.concat(catName);\n      this.setState({\n        categoriesChosen: input\n      });\n    }\n  }, {\n    key: \"decrementCount\",\n    value: function decrementCount(index) {\n      this.setState({\n        count: this.state.count - 1\n      }); //Remove a category\n\n      var currentCategories = this.state.categoriesChosen;\n      var unwantedCategory = currentCategories.indexOf(index);\n      currentCategories.splice(unwantedCategory, 1);\n      this.setState({\n        categoriesChosen: currentCategories\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //By default, our categoty buttons are all unselected. When selected, the button looks selected\n      //DEBUGGING PURPOSES, DELETE ME\n      var myEmptyArray = this.state.categoriesChosen;\n      var emptyArraySize = this.state.categoriesChosen.length; //DEBUGGING PURPOSES, DELETE ME\n\n      console.log(\"Array of current categories content  \" + myEmptyArray);\n      console.log(\"Array of current categories size \" + emptyArraySize);\n      var generalKnowledgeButton = this.state.generalKnowledge ? __jsx(DangerButton, {\n        text: \"General Knowledge\",\n        onClick: this.onClickGeneralKnowledge,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 7\n        }\n      }) : __jsx(CategoriesButton, {\n        text: \"General Knowledge\",\n        onClick: this.onClickGeneralKnowledge,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 7\n        }\n      });\n      var filmButton = this.state.film ? __jsx(DangerButton, {\n        text: \"Film\",\n        onClick: this.onClickFilm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 7\n        }\n      }) : __jsx(CategoriesButton, {\n        text: \"Film\",\n        onClick: this.onClickFilm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 7\n        }\n      });\n      var scienceNatureButton = this.state.scienceNature ? __jsx(DangerButton, {\n        text: \"Science and Nature\",\n        onClick: this.onClickScienceNature,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 7\n        }\n      }) : __jsx(CategoriesButton, {\n        text: \"Science and Nature\",\n        onClick: this.onClickScienceNature,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 7\n        }\n      });\n      var sportsButton = this.state.sports ? __jsx(DangerButton, {\n        text: \"Sports\",\n        onClick: this.onClickSports,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 7\n        }\n      }) : __jsx(CategoriesButton, {\n        text: \"Sports\",\n        onClick: this.onClickSports,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 7\n        }\n      });\n      var historyButton = this.state.history ? __jsx(DangerButton, {\n        text: \"History\",\n        onClick: this.onClickHistory,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 7\n        }\n      }) : __jsx(CategoriesButton, {\n        text: \"History\",\n        onClick: this.onClickHistory,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 7\n        }\n      });\n      var tvButton = this.state.tv ? __jsx(DangerButton, {\n        text: \"Television\",\n        onClick: this.onClickTV,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 7\n        }\n      }) : __jsx(CategoriesButton, {\n        text: \"Television\",\n        onClick: this.onClickTV,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 7\n        }\n      });\n      var booksButton = this.state.books ? __jsx(DangerButton, {\n        text: \"Books\",\n        onClick: this.onClickBooks,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 7\n        }\n      }) : __jsx(CategoriesButton, {\n        text: \"Books\",\n        onClick: this.onClickBooks,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 7\n        }\n      });\n      var musicButton = this.state.music ? __jsx(DangerButton, {\n        text: \"Music\",\n        onClick: this.onClickMusic,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 7\n        }\n      }) : __jsx(CategoriesButton, {\n        text: \"Music\",\n        onClick: this.onClickMusic,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 7\n        }\n      });\n      var mythologyButton = this.state.mythology ? __jsx(DangerButton, {\n        text: \"Mythology\",\n        onClick: this.onClickMythology,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 7\n        }\n      }) : __jsx(CategoriesButton, {\n        text: \"Mythology\",\n        onClick: this.onClickMythology,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 7\n        }\n      });\n      var geographyButton = this.state.geography ? __jsx(DangerButton, {\n        text: \"Geography\",\n        onClick: this.onClickGeography,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 7\n        }\n      }) : __jsx(CategoriesButton, {\n        text: \"Geography\",\n        onClick: this.onClickGeography,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 7\n        }\n      });\n      var artButton = this.state.art ? __jsx(DangerButton, {\n        text: \"Art\",\n        onClick: this.onClickArt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 7\n        }\n      }) : __jsx(CategoriesButton, {\n        text: \"Art\",\n        onClick: this.onClickArt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 7\n        }\n      });\n      var videoGamesButton = this.state.videoGames ? __jsx(DangerButton, {\n        text: \"Video Games\",\n        onClick: this.onClickVideoGames,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 7\n        }\n      }) : __jsx(CategoriesButton, {\n        text: \"Video Games\",\n        onClick: this.onClickVideoGames,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 7\n        }\n      }); // TODO: Add arrow button that would mean \"Next\".\n      // TODO: Limit selection to three categories.\n      // TODO: Keep track of which categories were selected for future API calls\n\n      return __jsx(\"div\", {\n        style: styles.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 7\n        }\n      }, __jsx(Grid, {\n        style: styles.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 9\n        }\n      }, \" SELECT UP TO 3 CATEGORIES \"), __jsx(\"div\", {\n        style: styles.categoryButtonsContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 9\n        }\n      }, __jsx(Grid, {\n        style: styles.categoryRow,\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }\n      }, generalKnowledgeButton, filmButton), __jsx(Grid, {\n        style: styles.categoryRow,\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }\n      }, scienceNatureButton, sportsButton), __jsx(Grid, {\n        style: styles.categoryRow,\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }\n      }, historyButton, tvButton), __jsx(Grid, {\n        style: styles.categoryRow,\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }\n      }, booksButton, musicButton), __jsx(Grid, {\n        style: styles.categoryRow,\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }\n      }, mythologyButton, geographyButton), __jsx(Grid, {\n        style: styles.categoryRow,\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }\n      }, artButton, videoGamesButton)), __jsx(IconButton, {\n        style: styles.nextButton,\n        onClick: this.onClickShowDifficultyScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 9\n        }\n      }, __jsx(DoubleArrowIcon, {\n        fontSize: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return CategoriesComponent;\n}(Component);\n\nexport default CategoriesComponent;","map":{"version":3,"sources":["/Users/paulinaanzaldo/Daimler/CabanaTrivia/pages/components/Categories.js"],"names":["React","Component","Button","DangerButton","CategoriesButton","Grid","styles","IconButton","DoubleArrowIcon","CATEGORIES_MAP","CategoriesComponent","props","state","count","categoriesChosen","generalKnowledge","film","scienceNature","sports","history","tv","books","music","mythology","geography","art","videoGames","onClickGeneralKnowledge","bind","onClickFilm","onClickScienceNature","onClickSports","onClickHistory","onClickTV","onClickBooks","onClickMusic","onClickMythology","onClickGeography","onClickArt","onClickVideoGames","incrementCount","decrementCount","onClickShowDifficultyScreen","currentCount","callback","console","log","setState","catName","input","concat","index","currentCategories","unwantedCategory","indexOf","splice","myEmptyArray","emptyArraySize","length","generalKnowledgeButton","filmButton","scienceNatureButton","sportsButton","historyButton","tvButton","booksButton","musicButton","mythologyButton","geographyButton","artButton","videoGamesButton","root","title","categoryButtonsContainer","categoryRow","nextButton"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button'\nimport DangerButton from './DangerButton'\nimport CategoriesButton from './CategoriesButton'\nimport Grid from '@material-ui/core/Grid'\nimport { styles } from '../stylesheet.js'\nimport { IconButton } from '@material-ui/core';\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\nimport {CATEGORIES_MAP} from '../constants'\n\n\n/* shown when user first starts playing - they can choose what type of game they want to play\ninitializes the state\n*/\nclass CategoriesComponent extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      count: 0,\n      categoriesChosen:[],\n\n      //PREVIOUSLY:\n      generalKnowledge: false,\n      film: false,\n      scienceNature: false,\n      sports: false,\n      history: false,\n      tv: false,\n      books: false,\n      music: false,\n      mythology: false,\n      geography: false,\n      art: false,\n      videoGames: false,\n    };\n\n    this.onClickGeneralKnowledge = this.onClickGeneralKnowledge.bind(this);\n    this.onClickFilm = this.onClickFilm.bind(this);\n    this.onClickScienceNature = this.onClickScienceNature.bind(this);\n    this.onClickSports = this.onClickSports.bind(this);\n    this.onClickHistory = this.onClickHistory.bind(this);\n    this.onClickTV = this.onClickTV.bind(this);\n    this.onClickBooks = this.onClickBooks.bind(this);\n    this.onClickMusic = this.onClickMusic.bind(this);\n    this.onClickMythology = this.onClickMythology.bind(this);\n    this.onClickGeography = this.onClickGeography.bind(this);\n    this.onClickArt = this.onClickArt.bind(this);\n    this.onClickVideoGames = this.onClickVideoGames.bind(this);\n    this.incrementCount = this.incrementCount.bind(this);\n    this.decrementCount = this.decrementCount.bind(this);\n    this.onClickShowDifficultyScreen = this.onClickShowDifficultyScreen.bind(this)\n  }\n\n  onClickShowDifficultyScreen() {\n    //Checks if user has selected at least one category\n    const currentCount = this.state.count\n    if (currentCount == 1 || currentCount == 2 || currentCount == 3) {\n      this.props.callback(\"DIFFICULTY\", this.state.categoriesChosen)\n      console.log(\"Ready to start\")\n    } else { console.log(\"Select 3 categories or less\") }\n\n  }\n\n  onClickGeneralKnowledge() {\n    this.setState({generalKnowledge: !this.state.generalKnowledge});\n    !this.state.generalKnowledge ? this.incrementCount(\"GENERAL_KNOWLEDGE\") : this.decrementCount(\"GENERAL_KNOWLEDGE\");\n\n  }\n\n  onClickFilm() {\n    this.setState({film: !this.state.film});\n    !this.state.film ? this.incrementCount(\"FILM\") : this.decrementCount(\"FILM\");\n  }\n\n  onClickScienceNature() {\n    this.setState({scienceNature: !this.state.scienceNature});\n    !this.state.scienceNature ? this.incrementCount(\"SCIENCE_NATURE\") : this.decrementCount(\"SCIENCE_NATURE\");\n\n  }\n\n  onClickSports() {\n    this.setState({sports: !this.state.sports});\n    !this.state.sports ? this.incrementCount(\"SPORTS\") : this.decrementCount(\"SPORTS\");\n  }\n\n  onClickHistory() {\n    this.setState({history: !this.state.history});\n    !this.state.history ? this.incrementCount(\"HISTORY\") : this.decrementCount(\"HISTORY\");\n  }\n\n  onClickTV() {\n    this.setState({tv: !this.state.tv});\n    !this.state.tv ? this.incrementCount(\"TELEVISION\") : this.decrementCount(\"TELEVISION\");\n\n  }\n\n  onClickBooks() {\n    this.setState({books: !this.state.books});\n    !this.state.books ? this.incrementCount(\"BOOKS\") : this.decrementCount(\"BOOKS\");\n  }\n\n  onClickMusic() {\n    this.setState({music: !this.state.music});\n    !this.state.music ? this.incrementCount(\"MUSIC\") : this.decrementCount((\"MUSIC\"));\n  }\n\n  onClickMythology() {\n    this.setState({mythology: !this.state.mythology});\n    !this.state.music ? this.incrementCount(\"MYTHOLOGY\") : this.decrementCount(\"MYTHOLOGY\");\n\n  }\n\n  onClickGeography() {\n    this.setState({geography: !this.state.geography});\n    !this.state.geography ? this.incrementCount(\"GEOGRAPHY\") : this.decrementCount(\"GEOGRAPHY\");\n\n  }\n\n  onClickArt() {\n    this.setState({art: !this.state.art});\n    !this.state.art ? this.incrementCount(\"ART\") : this.decrementCount(\"ART\");\n\n  }\n\n  onClickVideoGames() {\n    this.setState({videoGames: !this.state.videoGames});\n    !this.state.videoGames ? this.incrementCount(\"VIDEO_GAMES\") : this.decrementCount(\"VIDEO_GAMES\");\n\n  }\n\n  incrementCount(catName){\n    this.setState({ count: this.state.count + 1 })\n\n    //Add category to array\n    var input = this.state.categoriesChosen.concat(catName)\n    this.setState({categoriesChosen : input })\n\n  }\n\n  decrementCount(index){\n    this.setState({ count: this.state.count - 1 })\n\n    //Remove a category\n    var currentCategories = this.state.categoriesChosen\n    var unwantedCategory = currentCategories.indexOf(index)\n    currentCategories.splice(unwantedCategory,1)\n    this.setState({categoriesChosen : currentCategories })\n  }\n\n  render() {\n    //By default, our categoty buttons are all unselected. When selected, the button looks selected\n\n    //DEBUGGING PURPOSES, DELETE ME\n    const myEmptyArray = this.state.categoriesChosen\n    const emptyArraySize = this.state.categoriesChosen.length\n\n    //DEBUGGING PURPOSES, DELETE ME\n    console.log(\"Array of current categories content  \" + myEmptyArray)\n    console.log(\"Array of current categories size \" + emptyArraySize)\n\n\n    const generalKnowledgeButton = this.state.generalKnowledge ?\n      <DangerButton text=\"General Knowledge\" onClick={this.onClickGeneralKnowledge}/>\n      :\n      <CategoriesButton text=\"General Knowledge\" onClick={this.onClickGeneralKnowledge} />\n\n    const filmButton = this.state.film ?\n      <DangerButton text=\"Film\" onClick={this.onClickFilm}/>\n      :\n      <CategoriesButton text=\"Film\" onClick={this.onClickFilm} />\n\n    const scienceNatureButton = this.state.scienceNature ?\n      <DangerButton text=\"Science and Nature\" onClick={this.onClickScienceNature}/>\n      :\n      <CategoriesButton text=\"Science and Nature\" onClick={this.onClickScienceNature} />\n\n    const sportsButton = this.state.sports ?\n      <DangerButton text=\"Sports\" onClick={this.onClickSports}/>\n      :\n      <CategoriesButton text=\"Sports\" onClick={this.onClickSports} />\n\n    const historyButton = this.state.history ?\n      <DangerButton text=\"History\" onClick={this.onClickHistory}/>\n      :\n      <CategoriesButton text=\"History\" onClick={this.onClickHistory} />\n\n    const tvButton = this.state.tv ?\n      <DangerButton text=\"Television\" onClick={this.onClickTV}/>\n      :\n      <CategoriesButton text=\"Television\" onClick={this.onClickTV} />\n\n    const booksButton = this.state.books ?\n      <DangerButton text=\"Books\" onClick={this.onClickBooks}/>\n      :\n      <CategoriesButton text=\"Books\" onClick={this.onClickBooks} />\n\n    const musicButton = this.state.music ?\n      <DangerButton text=\"Music\" onClick={this.onClickMusic}/>\n      :\n      <CategoriesButton text=\"Music\" onClick={this.onClickMusic} />\n\n    const mythologyButton = this.state.mythology ?\n      <DangerButton text=\"Mythology\" onClick={this.onClickMythology}/>\n      :\n      <CategoriesButton text=\"Mythology\" onClick={this.onClickMythology} />\n\n    const geographyButton = this.state.geography ?\n      <DangerButton text=\"Geography\" onClick={this.onClickGeography}/>\n      :\n      <CategoriesButton text=\"Geography\" onClick={this.onClickGeography} />\n\n    const artButton = this.state.art ?\n      <DangerButton text=\"Art\" onClick={this.onClickArt}/>\n      :\n      <CategoriesButton text=\"Art\" onClick={this.onClickArt} />\n\n    const videoGamesButton = this.state.videoGames ?\n      <DangerButton text=\"Video Games\" onClick={this.onClickVideoGames}/>\n      :\n      <CategoriesButton text=\"Video Games\" onClick={this.onClickVideoGames} />\n\n      // TODO: Add arrow button that would mean \"Next\".\n      // TODO: Limit selection to three categories.\n      // TODO: Keep track of which categories were selected for future API calls\n    return (\n      <div style={styles.root}>\n        <Grid style={styles.title}> SELECT UP TO 3 CATEGORIES </Grid>\n        <div style={styles.categoryButtonsContainer}>\n          <Grid style={styles.categoryRow} spacing={3}>\n            {generalKnowledgeButton}\n            {filmButton}\n          </Grid>\n          <Grid style={styles.categoryRow} spacing={3}>\n            {scienceNatureButton}\n            {sportsButton}\n          </Grid>\n          <Grid style={styles.categoryRow} spacing={3}>\n            {historyButton}\n            {tvButton}\n          </Grid>\n          <Grid style={styles.categoryRow} spacing={3}>\n            {booksButton}\n            {musicButton}\n          </Grid>\n          <Grid style={styles.categoryRow} spacing={3}>\n            {mythologyButton}\n            {geographyButton}\n          </Grid>\n          <Grid style={styles.categoryRow} spacing={3}>\n            {artButton}\n            {videoGamesButton}\n          </Grid>\n        </div>\n        <IconButton style={styles.nextButton} onClick={this.onClickShowDifficultyScreen}>\n          <DoubleArrowIcon fontSize=\"large\"/>\n        </IconButton>\n      </div>\n    );\n  }\n\n}\nexport default CategoriesComponent;\n"]},"metadata":{},"sourceType":"module"}
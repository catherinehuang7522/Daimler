{"ast":null,"code":"var _jsxFileName = \"/Users/jack/Google Drive/Winter Quarter 2020/CS 210/Daimler/CabanaTrivia/pages/components/Feedback.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nconst Entities = require('html-entities').AllHtmlEntities;\n\nconst entities = new Entities();\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'grid',\n    direction: 'column'\n  },\n  minicontainer: {\n    display: 'grid',\n    direction: 'row'\n  }\n}));\n\nclass FeedbackComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.onPressDismiss = this.onPressDismiss.bind(this);\n    this.state = {\n      wasCorrect: props.wasCorrect,\n      correctAnswer: props.correctAnswer\n    };\n  }\n\n  onPressDismiss() {\n    this.props.callback();\n  }\n\n  render() {\n    let headerText;\n    let bodyText;\n\n    if (this.state.wasCorrect) {\n      headerText = \"Correct!\";\n      bodyText = \"Way to go! You were right! \" + this.state.correctAnswer + \"is correct.\";\n    } else {\n      headerText = \"Incorrect\";\n      bodyText = \"Oh no, that wasn't right. The correct answer was \" + this.state.correctAnswer + \".\";\n    }\n\n    return __jsx(Grid, {\n      container: true,\n      direction: \"column\",\n      justify: \"center\",\n      alignItems: \"center\",\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, __jsx(Grid, {\n      minicontainer: true,\n      spacing: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, headerText)), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, bodyText));\n  }\n\n}\n\nexport default FeedbackComponent;","map":{"version":3,"sources":["/Users/jack/Google Drive/Winter Quarter 2020/CS 210/Daimler/CabanaTrivia/pages/components/Feedback.js"],"names":["React","Component","Button","makeStyles","Grid","Entities","require","AllHtmlEntities","entities","useStyles","theme","container","display","direction","minicontainer","FeedbackComponent","constructor","props","onPressDismiss","bind","state","wasCorrect","correctAnswer","callback","render","headerText","bodyText"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,eAAD,CAAP,CAAyBC,eAA1C;;AAEA,MAAMC,QAAQ,GAAG,IAAIH,QAAJ,EAAjB;AAGA,MAAMI,SAAS,GAAGN,UAAU,CAACO,KAAK,KAAK;AACrCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,SAAS,EAAE;AAFF,GAD0B;AAKrCC,EAAAA,aAAa,EAAE;AACbF,IAAAA,OAAO,EAAE,MADI;AAEbC,IAAAA,SAAS,EAAE;AAFE;AALsB,CAAL,CAAN,CAA5B;;AAaA,MAAME,iBAAN,SAAgCd,SAAhC,CAA0C;AAExCe,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAEJ,KAAK,CAACI,UADP;AAEXC,MAAAA,aAAa,EAAEL,KAAK,CAACK;AAFV,KAAb;AAID;;AAEDJ,EAAAA,cAAc,GAAG;AACf,SAAKD,KAAL,CAAWM,QAAX;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAIC,UAAJ;AACA,QAAIC,QAAJ;;AACA,QAAI,KAAKN,KAAL,CAAWC,UAAf,EAA2B;AACzBI,MAAAA,UAAU,GAAG,UAAb;AACAC,MAAAA,QAAQ,GAAG,gCAAgC,KAAKN,KAAL,CAAWE,aAA3C,GAA2D,aAAtE;AACD,KAHD,MAGO;AACLG,MAAAA,UAAU,GAAG,WAAb;AACAC,MAAAA,QAAQ,GAAG,sDAAsD,KAAKN,KAAL,CAAWE,aAAjE,GAAiF,GAA5F;AACD;;AAED,WAAO,MAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AACP,MAAA,SAAS,EAAC,QADH;AAEP,MAAA,OAAO,EAAC,QAFD;AAGP,MAAA,UAAU,EAAC,QAHJ;AAIP,MAAA,OAAO,EAAE,CAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAML,MAAC,IAAD;AAAM,MAAA,aAAa,MAAnB;AAAoB,MAAA,OAAO,EAAE,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGG,UADH,CADF,CANK,EAYL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIC,QAAJ,CAZK,CAAP;AAkBD;;AA7CuC;;AA+C1C,eAAeX,iBAAf","sourcesContent":["import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid'\nconst Entities = require('html-entities').AllHtmlEntities\n\nconst entities = new Entities();\n\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'grid',\n    direction: 'column'\n  },\n  minicontainer: {\n    display: 'grid',\n    direction: 'row'\n  }\n}));\n\n\n\nclass FeedbackComponent extends Component {\n\n  constructor(props) {\n    super(props)\n    this.onPressDismiss = this.onPressDismiss.bind(this)\n\n    this.state = {\n      wasCorrect: props.wasCorrect,\n      correctAnswer: props.correctAnswer\n    };\n  }\n\n  onPressDismiss() {\n    this.props.callback()\n  }\n\n  render() {\n    let headerText;\n    let bodyText;\n    if (this.state.wasCorrect) {\n      headerText = \"Correct!\";\n      bodyText = \"Way to go! You were right! \" + this.state.correctAnswer + \"is correct.\"\n    } else {\n      headerText = \"Incorrect\";\n      bodyText = \"Oh no, that wasn't right. The correct answer was \" + this.state.correctAnswer + \".\"\n    }\n\n    return <Grid container\n    direction=\"column\"\n    justify=\"center\"\n    alignItems=\"center\"\n    spacing={2}>\n\n      <Grid minicontainer spacing={1}>\n        <h1>\n          {headerText}\n        </h1>\n      </Grid>\n\n      <p>{bodyText}</p>\n\n\n    </Grid>\n\n\n  }\n}\nexport default FeedbackComponent;\n"]},"metadata":{},"sourceType":"module"}
{"version":3,"file":"static/webpack/static/development/pages/index.js.3f44545a2c1b9628694d.hot-update.js","sources":["webpack:///./pages/components/Start.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button'\nimport DangerButton from './DangerButton'\nimport Grid from '@material-ui/core/Grid'\nimport { styles } from '../stylesheet.js'\n\nconst NUM_QUESTIONS_PER_MINUTE = 10\n\n/* shown when user first starts playing - they can choose what type of game they want to play\ninitializes the state\n*/\nclass StartComponent extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      randomvar: '',\n      startGame: true,\n      singlePlayer: true,\n      duration: 1\n    };\n\n    this.onClickStartGame = this.onClickStartGame.bind(this)\n    this.onClickSingle = this.onClickSingle.bind(this)\n    this.onClickMulti  = this.onClickMulti.bind(this)\n  }\n\n\n  // sets up the state to play a game for the prototype. Calls a callback function that will call the backhome function\n  onClickStartGame() {\n    this.setState({ startGame: !this.state.startGame })\n    this.props.callback(\"CATEGORIES\")\n  }\n\n  onClickSingle() {\n    this.setState({ singlePlayer: true })\n\n  }\n\n  onClickMulti() {\n    this.setState({ singlePlayer: false })\n  }\n\n  onSelectDuration(dur) {\n    this.setState({ duration: dur })\n  }\n\n  render() {\n    const startButton =\n      <Button style={styles.unselectedButton} variant=\"contained\" onClick={this.onClickStartGame} >\n        Start Game\n      </Button>\n\n    const singlePlayerSelector = this.state.singlePlayer ?\n      <DangerButton text=\"Single Player\"/>\n      :\n      <Button style={styles.unselectedButton} variant=\"contained\" onClick={this.onClickSingle} >\n        Single Player\n      </Button>\n\n    const multiPlayerSelector = this.state.singlePlayer ?\n      <Button style={styles.unselectedButton} variant=\"contained\" onClick={this.onClickMulti} >\n        Multi Player\n      </Button>\n      :\n      <DangerButton text=\"Multi Player\"/>\n\n    const shortDurationSelector = this.state.duration === 1 ?\n      <DangerButton text=\"Short Game [10 min]\"/>\n      :\n      <Button style={styles.unselectedButton}  variant=\"contained\" onClick={() => this.onSelectDuration(1)} >\n        Short Game [10 min]\n      </Button>\n\n    const medDurationSelector = this.state.duration === 2 ?\n      <DangerButton text=\"Medium Game [20 min]\"/>\n      :\n      <Button style={styles.unselectedButton}  variant=\"contained\" onClick={() => this.onSelectDuration(2)} >\n        Medium Game [20 min]\n      </Button>\n\n    const longDurationSelector = this.state.duration === 3 ?\n      <DangerButton text=\"Long Game [30 min]\"/>\n      :\n      <Button style={styles.unselectedButton} variant=\"contained\" onClick={() => this.onSelectDuration(3)} >\n        Long Game [30 min]\n      </Button>\n\n    return (\n      <div style={styles.root}>\n        <Grid style={styles.title}> TRIVIA </Grid>\n\n        <Grid style={styles.row} spacing={3}>\n          {singlePlayerSelector}\n          {multiPlayerSelector}\n        </Grid>\n\n        <Grid style={styles.row} spacing={3}>\n          {shortDurationSelector}\n          {medDurationSelector}\n          {longDurationSelector}\n        </Grid>\n\n        <Grid style={styles.row} spacing={3}>\n          {startButton}\n        </Grid>\n      </div>\n    );\n  }\n\n}\nexport default StartComponent;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;;;;AAGA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAZA;AAaA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AAEA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AAjGA;AACA;AAmGA;;;;A","sourceRoot":""}
{"version":3,"file":"static/webpack/static/development/pages/index.js.b969b7c0b436ddc54532.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button'\nimport DangerButton from './components/DangerButton'\nimport Grid from '@material-ui/core/Grid'\nimport StartComponent from './components/Start'\nimport QuestionsComponent from './components/Questions'\nimport CategoriesComponent from './components/Categories'\nimport DifficultyComponent from './components/Difficulty'\n\n\nconst styles = ({\n\n})\n\nexport default class IndexPage extends Component {\n\n  constructor(props) {\n    super(props)\n\n    // initialize the game state\n    this.state = {\n      gameState: \"START\",\n      catArray:[],\n      gameDifficulty: \"\",\n    };\n\n    this.renderSwitch = this.renderSwitch.bind(this)\n    this.backHome = this.backHome.bind(this)\n    this.fromDifficultyToQuestions = this.fromDifficultyToQuestions.bind(this)\n    this.fromCategoriestoDifficulty = this.fromCategoriestoDifficulty.bind(this)\n  }\n\n  fromCategoriestoDifficulty(nextActions, updatedArray){\n    this.setState({catArray: updatedArray})\n    this.setState({gameState: nextActions})\n  }\n\n  fromDifficultyToQuestions(nextActions, difficulty){\n    this.setState({gameDifficulty: difficulty})\n    this.setState({gameState: nextActions})\n  }\n\n\n  // changes the state of the game to whatever is passed as \"nextActions\". Can be e.g. START or QUESTIONS\n  backHome(nextActions){\n    this.setState({gameState:nextActions})\n\n  }\n\n  // reder the desired componenent based on the state\n  renderSwitch(gameState) {\n    switch (gameState) {\n      case 'START':\n        return <StartComponent callback={this.backHome}></StartComponent>\n      case 'CATEGORIES':\n        return <CategoriesComponent callback={this.fromCategoriestoDifficulty} ></CategoriesComponent>\n      case 'QUESTIONS':\n        return <QuestionsComponent callback={this.backHome} cat ={this.state.catArray} diff = {this.state.gameDifficulty} > </QuestionsComponent>\n      case 'DIFFICULTY':\n        return <DifficultyComponent callback={this.fromDifficultyToQuestions}></DifficultyComponent>\n      default:\n        return <StartComponent></StartComponent>\n    }\n  }\n\n\n\n  render() {\n    return <> {this.renderSwitch(this.state.gameState)}</>\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAbA;AAcA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAGA;AACA;AAAA;AAAA;AAEA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVA;AAYA;;;AAIA;AACA;AACA;;;;AAvDA;AACA;;;;;A","sourceRoot":""}
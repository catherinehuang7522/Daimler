{"ast":null,"code":"var _jsxFileName = \"/Users/paulinaanzaldo/Daimler/src/components/Feedback.js\";\nimport { styles } from \"../stylesheet\";\nimport React, { Component } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst Entities = require(\"html-entities\").AllHtmlEntities;\n\nconst entities = new Entities();\n\nclass FeedbackComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.onPressDismiss = this.onPressDismiss.bind(this);\n  }\n\n  onPressDismiss() {\n    this.props.callback();\n  }\n\n  render() {\n    let headerText;\n    let bodyText;\n\n    if (this.props.wasCorrect) {\n      headerText = \"Correct!\";\n      bodyText = \"Way to go! You were right! \" + this.props.correctAnswer + \" is correct.\";\n    } else {\n      headerText = \"Incorrect\";\n      bodyText = \"Oh no, that wasn't right. The correct answer was \" + this.props.correctAnswer + \".\";\n    }\n\n    return /*#__PURE__*/React.createElement(Grid, {\n      columnGrid: true,\n      direction: \"column\",\n      justify: \"center\",\n      alignItems: \"center\",\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      rowGrid: true,\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: styles.feedbackHeaderText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, headerText)), /*#__PURE__*/React.createElement(\"p\", {\n      style: styles.feedbackBodyText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, bodyText));\n  }\n\n}\n\nexport default FeedbackComponent;","map":{"version":3,"sources":["/Users/paulinaanzaldo/Daimler/src/components/Feedback.js"],"names":["styles","React","Component","Grid","Entities","require","AllHtmlEntities","entities","FeedbackComponent","constructor","props","onPressDismiss","bind","callback","render","headerText","bodyText","wasCorrect","correctAnswer","feedbackHeaderText","feedbackBodyText"],"mappings":";AAAA,SAASA,MAAT,QAAuB,eAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,eAAD,CAAP,CAAyBC,eAA1C;;AAEA,MAAMC,QAAQ,GAAG,IAAIH,QAAJ,EAAjB;;AAEA,MAAMI,iBAAN,SAAgCN,SAAhC,CAA0C;AACxCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAEDD,EAAAA,cAAc,GAAG;AACf,SAAKD,KAAL,CAAWG,QAAX;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAIC,UAAJ;AACA,QAAIC,QAAJ;;AACA,QAAI,KAAKN,KAAL,CAAWO,UAAf,EAA2B;AACzBF,MAAAA,UAAU,GAAG,UAAb;AACAC,MAAAA,QAAQ,GACN,gCACA,KAAKN,KAAL,CAAWQ,aADX,GAEA,cAHF;AAID,KAND,MAMO;AACLH,MAAAA,UAAU,GAAG,WAAb;AACAC,MAAAA,QAAQ,GACN,sDACA,KAAKN,KAAL,CAAWQ,aADX,GAEA,GAHF;AAID;;AAED,wBACE,oBAAC,IAAD;AACE,MAAA,UAAU,MADZ;AAEE,MAAA,SAAS,EAAC,QAFZ;AAGE,MAAA,OAAO,EAAC,QAHV;AAIE,MAAA,UAAU,EAAC,QAJb;AAKE,MAAA,OAAO,EAAE,CALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE,oBAAC,IAAD;AAAM,MAAA,OAAO,MAAb;AAAc,MAAA,OAAO,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,KAAK,EAAElB,MAAM,CAACmB,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsCJ,UAAtC,CADF,CAPF,eAWE;AAAG,MAAA,KAAK,EAAEf,MAAM,CAACoB,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoCJ,QAApC,CAXF,CADF;AAeD;;AA1CuC;;AA4C1C,eAAeR,iBAAf","sourcesContent":["import { styles } from \"../stylesheet\";\nimport React, { Component } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nconst Entities = require(\"html-entities\").AllHtmlEntities;\n\nconst entities = new Entities();\n\nclass FeedbackComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.onPressDismiss = this.onPressDismiss.bind(this);\n  }\n\n  onPressDismiss() {\n    this.props.callback();\n  }\n\n  render() {\n    let headerText;\n    let bodyText;\n    if (this.props.wasCorrect) {\n      headerText = \"Correct!\";\n      bodyText =\n        \"Way to go! You were right! \" +\n        this.props.correctAnswer +\n        \" is correct.\";\n    } else {\n      headerText = \"Incorrect\";\n      bodyText =\n        \"Oh no, that wasn't right. The correct answer was \" +\n        this.props.correctAnswer +\n        \".\";\n    }\n\n    return (\n      <Grid\n        columnGrid\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        spacing={2}\n      >\n        <Grid rowGrid spacing={1}>\n          <p style={styles.feedbackHeaderText}>{headerText}</p>\n        </Grid>\n\n        <p style={styles.feedbackBodyText}>{bodyText}</p>\n      </Grid>\n    );\n  }\n}\nexport default FeedbackComponent;\n"]},"metadata":{},"sourceType":"module"}
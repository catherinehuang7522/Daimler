{"ast":null,"code":"var _jsxFileName = \"/Users/paulinaanzaldo/Daimler/src/IndexPage.js\";\nimport React, { Component } from \"react\";\nimport StartComponent from \"./components/Start\";\nimport QuestionsComponent from \"./components/Questions\";\nconst styles = {};\nexport default class IndexPage extends Component {\n  constructor(props) {\n    super(props); // initialize the game state\n\n    this.state = {\n      gameState: \"START\"\n    };\n    this.renderSwitch = this.renderSwitch.bind(this);\n    this.backHome = this.backHome.bind(this);\n  } // changes the state of the game to whatever is passed as \"nextActions\". Can be e.g. START or QUESTIONS\n\n\n  backHome(nextActions) {\n    this.setState({\n      gameState: nextActions\n    });\n  } // reder the desired componenent based on the state\n\n\n  renderSwitch(gameState) {\n    switch (gameState) {\n      case \"START\":\n        return /*#__PURE__*/React.createElement(StartComponent, {\n          callback: this.backHome,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 16\n          }\n        });\n\n      case \"QUESTIONS\":\n        return /*#__PURE__*/React.createElement(QuestionsComponent, {\n          callback: this.backHome,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 11\n          }\n        });\n\n      default:\n        return /*#__PURE__*/React.createElement(StartComponent, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 16\n          }\n        });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, \" \", this.renderSwitch(this.state.gameState));\n  }\n\n}","map":{"version":3,"sources":["/Users/paulinaanzaldo/Daimler/src/IndexPage.js"],"names":["React","Component","StartComponent","QuestionsComponent","styles","IndexPage","constructor","props","state","gameState","renderSwitch","bind","backHome","nextActions","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,OAAOC,kBAAP,MAA+B,wBAA/B;AAEA,MAAMC,MAAM,GAAG,EAAf;AAEA,eAAe,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAC/CK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAGjB;;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACD,GAX8C,CAa/C;;;AACAC,EAAAA,QAAQ,CAACC,WAAD,EAAc;AACpB,SAAKC,QAAL,CAAc;AAAEL,MAAAA,SAAS,EAAEI;AAAb,KAAd;AACD,GAhB8C,CAkB/C;;;AACAH,EAAAA,YAAY,CAACD,SAAD,EAAY;AACtB,YAAQA,SAAR;AACE,WAAK,OAAL;AACE,4BAAO,oBAAC,cAAD;AAAgB,UAAA,QAAQ,EAAE,KAAKG,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACF,WAAK,WAAL;AACE,4BACE,oBAAC,kBAAD;AAAoB,UAAA,QAAQ,EAAE,KAAKA,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAGF;AACE,4BAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AARJ;AAUD;;AAEDG,EAAAA,MAAM,GAAG;AACP,wBAAO,+CAAI,KAAKL,YAAL,CAAkB,KAAKF,KAAL,CAAWC,SAA7B,CAAJ,CAAP;AACD;;AAlC8C","sourcesContent":["import React, { Component } from \"react\";\nimport StartComponent from \"./components/Start\";\nimport QuestionsComponent from \"./components/Questions\";\n\nconst styles = {};\n\nexport default class IndexPage extends Component {\n  constructor(props) {\n    super(props);\n\n    // initialize the game state\n    this.state = {\n      gameState: \"START\",\n    };\n\n    this.renderSwitch = this.renderSwitch.bind(this);\n    this.backHome = this.backHome.bind(this);\n  }\n\n  // changes the state of the game to whatever is passed as \"nextActions\". Can be e.g. START or QUESTIONS\n  backHome(nextActions) {\n    this.setState({ gameState: nextActions });\n  }\n\n  // reder the desired componenent based on the state\n  renderSwitch(gameState) {\n    switch (gameState) {\n      case \"START\":\n        return <StartComponent callback={this.backHome}></StartComponent>;\n      case \"QUESTIONS\":\n        return (\n          <QuestionsComponent callback={this.backHome}></QuestionsComponent>\n        );\n      default:\n        return <StartComponent></StartComponent>;\n    }\n  }\n\n  render() {\n    return <> {this.renderSwitch(this.state.gameState)}</>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
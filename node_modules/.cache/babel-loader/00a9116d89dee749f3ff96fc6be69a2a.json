{"ast":null,"code":"var _jsxFileName = \"/Users/paulinaanzaldo/Daimler/src/components/Start.js\";\nimport { styles } from \"../stylesheet\";\nimport React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport DangerButton from \"./DangerButton\";\nimport Grid from \"@material-ui/core/Grid\";\n/* shown when user first starts playing - they can choose what type of game they want to play\ninitializes the state\n*/\n\nclass StartComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      randomvar: \"\",\n      startGame: true,\n      singlePlayer: true,\n      duration: 1\n    };\n    this.onClickStartGame = this.onClickStartGame.bind(this);\n    this.onClickSingle = this.onClickSingle.bind(this);\n    this.onClickMulti = this.onClickMulti.bind(this);\n  } // sets up the state to play a game for the prototype. Calls a callback function that will call the backhome function\n\n\n  onClickStartGame() {\n    this.setState({\n      startGame: !this.state.startGame\n    });\n    this.props.callback(\"QUESTIONS\");\n  }\n\n  onClickSingle() {\n    this.setState({\n      singlePlayer: true\n    });\n  }\n\n  onClickMulti() {\n    this.setState({\n      singlePlayer: false\n    });\n  }\n\n  onSelectDuration(dur) {\n    this.setState({\n      duration: dur\n    });\n  }\n\n  render() {\n    const startButton = /*#__PURE__*/React.createElement(Button, {\n      style: styles.unselectedButton,\n      variant: \"contained\",\n      onClick: this.onClickStartGame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, \"Start Game\");\n    const singlePlayerSelector = this.state.singlePlayer ? /*#__PURE__*/React.createElement(DangerButton, {\n      text: \"Single Player\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }) : /*#__PURE__*/React.createElement(Button, {\n      style: styles.unselectedButton,\n      variant: \"contained\",\n      onClick: this.onClickSingle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, \"Single Player\");\n    const multiPlayerSelector = this.state.singlePlayer ? /*#__PURE__*/React.createElement(Button, {\n      style: styles.unselectedButton,\n      variant: \"contained\",\n      onClick: this.onClickMulti,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, \"Multi Player\") : /*#__PURE__*/React.createElement(DangerButton, {\n      text: \"Multi Player\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    });\n    const shortDurationSelector = this.state.duration === 1 ? /*#__PURE__*/React.createElement(DangerButton, {\n      text: \"Short Game [10 min]\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }) : /*#__PURE__*/React.createElement(Button, {\n      style: styles.unselectedButton,\n      variant: \"contained\",\n      onClick: () => this.onSelectDuration(1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, \"Short Game [10 min]\");\n    const medDurationSelector = this.state.duration === 2 ? /*#__PURE__*/React.createElement(DangerButton, {\n      text: \"Medium Game [20 min]\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }) : /*#__PURE__*/React.createElement(Button, {\n      style: styles.unselectedButton,\n      variant: \"contained\",\n      onClick: () => this.onSelectDuration(2),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, \"Medium Game [20 min]\");\n    const longDurationSelector = this.state.duration === 3 ? /*#__PURE__*/React.createElement(DangerButton, {\n      text: \"Long Game [30 min]\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }) : /*#__PURE__*/React.createElement(Button, {\n      style: styles.unselectedButton,\n      variant: \"contained\",\n      onClick: () => this.onSelectDuration(3),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, \"Long Game [30 min]\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      style: styles.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, \" TRIVIA \"), /*#__PURE__*/React.createElement(Grid, {\n      style: styles.row,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, singlePlayerSelector, multiPlayerSelector), /*#__PURE__*/React.createElement(Grid, {\n      style: styles.row,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, shortDurationSelector, medDurationSelector, longDurationSelector), /*#__PURE__*/React.createElement(Grid, {\n      style: styles.row,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, startButton));\n  }\n\n}\n\nexport default StartComponent;","map":{"version":3,"sources":["/Users/paulinaanzaldo/Daimler/src/components/Start.js"],"names":["styles","React","Component","Button","DangerButton","Grid","StartComponent","constructor","props","state","randomvar","startGame","singlePlayer","duration","onClickStartGame","bind","onClickSingle","onClickMulti","setState","callback","onSelectDuration","dur","render","startButton","unselectedButton","singlePlayerSelector","multiPlayerSelector","shortDurationSelector","medDurationSelector","longDurationSelector","root","title","row"],"mappings":";AAAA,SAASA,MAAT,QAAuB,eAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA;;;;AAGA,MAAMC,cAAN,SAA6BJ,SAA7B,CAAuC;AACrCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,SAAS,EAAE,IAFA;AAGXC,MAAAA,YAAY,EAAE,IAHH;AAIXC,MAAAA,QAAQ,EAAE;AAJC,KAAb;AAOA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAApB;AACD,GAdoC,CAgBrC;;;AACAD,EAAAA,gBAAgB,GAAG;AACjB,SAAKI,QAAL,CAAc;AAAEP,MAAAA,SAAS,EAAE,CAAC,KAAKF,KAAL,CAAWE;AAAzB,KAAd;AACA,SAAKH,KAAL,CAAWW,QAAX,CAAoB,WAApB;AACD;;AAEDH,EAAAA,aAAa,GAAG;AACd,SAAKE,QAAL,CAAc;AAAEN,MAAAA,YAAY,EAAE;AAAhB,KAAd;AACD;;AAEDK,EAAAA,YAAY,GAAG;AACb,SAAKC,QAAL,CAAc;AAAEN,MAAAA,YAAY,EAAE;AAAhB,KAAd;AACD;;AAEDQ,EAAAA,gBAAgB,CAACC,GAAD,EAAM;AACpB,SAAKH,QAAL,CAAc;AAAEL,MAAAA,QAAQ,EAAEQ;AAAZ,KAAd;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMC,WAAW,gBACf,oBAAC,MAAD;AACE,MAAA,KAAK,EAAEvB,MAAM,CAACwB,gBADhB;AAEE,MAAA,OAAO,EAAC,WAFV;AAGE,MAAA,OAAO,EAAE,KAAKV,gBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF;AAUA,UAAMW,oBAAoB,GAAG,KAAKhB,KAAL,CAAWG,YAAX,gBAC3B,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD2B,gBAG3B,oBAAC,MAAD;AACE,MAAA,KAAK,EAAEZ,MAAM,CAACwB,gBADhB;AAEE,MAAA,OAAO,EAAC,WAFV;AAGE,MAAA,OAAO,EAAE,KAAKR,aAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF;AAYA,UAAMU,mBAAmB,GAAG,KAAKjB,KAAL,CAAWG,YAAX,gBAC1B,oBAAC,MAAD;AACE,MAAA,KAAK,EAAEZ,MAAM,CAACwB,gBADhB;AAEE,MAAA,OAAO,EAAC,WAFV;AAGE,MAAA,OAAO,EAAE,KAAKP,YAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAD0B,gBAS1B,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF;AAYA,UAAMU,qBAAqB,GACzB,KAAKlB,KAAL,CAAWI,QAAX,KAAwB,CAAxB,gBACE,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,qBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,gBAGE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAEb,MAAM,CAACwB,gBADhB;AAEE,MAAA,OAAO,EAAC,WAFV;AAGE,MAAA,OAAO,EAAE,MAAM,KAAKJ,gBAAL,CAAsB,CAAtB,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAJJ;AAaA,UAAMQ,mBAAmB,GACvB,KAAKnB,KAAL,CAAWI,QAAX,KAAwB,CAAxB,gBACE,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,sBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,gBAGE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAEb,MAAM,CAACwB,gBADhB;AAEE,MAAA,OAAO,EAAC,WAFV;AAGE,MAAA,OAAO,EAAE,MAAM,KAAKJ,gBAAL,CAAsB,CAAtB,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAJJ;AAaA,UAAMS,oBAAoB,GACxB,KAAKpB,KAAL,CAAWI,QAAX,KAAwB,CAAxB,gBACE,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,gBAGE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAEb,MAAM,CAACwB,gBADhB;AAEE,MAAA,OAAO,EAAC,WAFV;AAGE,MAAA,OAAO,EAAE,MAAM,KAAKJ,gBAAL,CAAsB,CAAtB,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJJ;AAaA,wBACE;AAAK,MAAA,KAAK,EAAEpB,MAAM,CAAC8B,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE9B,MAAM,CAAC+B,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAGE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE/B,MAAM,CAACgC,GAApB;AAAyB,MAAA,OAAO,EAAE,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGP,oBADH,EAEGC,mBAFH,CAHF,eAQE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE1B,MAAM,CAACgC,GAApB;AAAyB,MAAA,OAAO,EAAE,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,qBADH,EAEGC,mBAFH,EAGGC,oBAHH,CARF,eAcE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE7B,MAAM,CAACgC,GAApB;AAAyB,MAAA,OAAO,EAAE,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGT,WADH,CAdF,CADF;AAoBD;;AAhIoC;;AAkIvC,eAAejB,cAAf","sourcesContent":["import { styles } from \"../stylesheet\";\nimport React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport DangerButton from \"./DangerButton\";\nimport Grid from \"@material-ui/core/Grid\";\n\n/* shown when user first starts playing - they can choose what type of game they want to play\ninitializes the state\n*/\nclass StartComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      randomvar: \"\",\n      startGame: true,\n      singlePlayer: true,\n      duration: 1,\n    };\n\n    this.onClickStartGame = this.onClickStartGame.bind(this);\n    this.onClickSingle = this.onClickSingle.bind(this);\n    this.onClickMulti = this.onClickMulti.bind(this);\n  }\n\n  // sets up the state to play a game for the prototype. Calls a callback function that will call the backhome function\n  onClickStartGame() {\n    this.setState({ startGame: !this.state.startGame });\n    this.props.callback(\"QUESTIONS\");\n  }\n\n  onClickSingle() {\n    this.setState({ singlePlayer: true });\n  }\n\n  onClickMulti() {\n    this.setState({ singlePlayer: false });\n  }\n\n  onSelectDuration(dur) {\n    this.setState({ duration: dur });\n  }\n\n  render() {\n    const startButton = (\n      <Button\n        style={styles.unselectedButton}\n        variant=\"contained\"\n        onClick={this.onClickStartGame}\n      >\n        Start Game\n      </Button>\n    );\n\n    const singlePlayerSelector = this.state.singlePlayer ? (\n      <DangerButton text=\"Single Player\" />\n    ) : (\n      <Button\n        style={styles.unselectedButton}\n        variant=\"contained\"\n        onClick={this.onClickSingle}\n      >\n        Single Player\n      </Button>\n    );\n\n    const multiPlayerSelector = this.state.singlePlayer ? (\n      <Button\n        style={styles.unselectedButton}\n        variant=\"contained\"\n        onClick={this.onClickMulti}\n      >\n        Multi Player\n      </Button>\n    ) : (\n      <DangerButton text=\"Multi Player\" />\n    );\n\n    const shortDurationSelector =\n      this.state.duration === 1 ? (\n        <DangerButton text=\"Short Game [10 min]\" />\n      ) : (\n        <Button\n          style={styles.unselectedButton}\n          variant=\"contained\"\n          onClick={() => this.onSelectDuration(1)}\n        >\n          Short Game [10 min]\n        </Button>\n      );\n\n    const medDurationSelector =\n      this.state.duration === 2 ? (\n        <DangerButton text=\"Medium Game [20 min]\" />\n      ) : (\n        <Button\n          style={styles.unselectedButton}\n          variant=\"contained\"\n          onClick={() => this.onSelectDuration(2)}\n        >\n          Medium Game [20 min]\n        </Button>\n      );\n\n    const longDurationSelector =\n      this.state.duration === 3 ? (\n        <DangerButton text=\"Long Game [30 min]\" />\n      ) : (\n        <Button\n          style={styles.unselectedButton}\n          variant=\"contained\"\n          onClick={() => this.onSelectDuration(3)}\n        >\n          Long Game [30 min]\n        </Button>\n      );\n\n    return (\n      <div style={styles.root}>\n        <Grid style={styles.title}> TRIVIA </Grid>\n\n        <Grid style={styles.row} spacing={3}>\n          {singlePlayerSelector}\n          {multiPlayerSelector}\n        </Grid>\n\n        <Grid style={styles.row} spacing={3}>\n          {shortDurationSelector}\n          {medDurationSelector}\n          {longDurationSelector}\n        </Grid>\n\n        <Grid style={styles.row} spacing={3}>\n          {startButton}\n        </Grid>\n      </div>\n    );\n  }\n}\nexport default StartComponent;\n"]},"metadata":{},"sourceType":"module"}